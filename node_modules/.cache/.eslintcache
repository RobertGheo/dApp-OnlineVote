[{"/home/robert/Final Project/dApp-OnlineVote/src/index.tsx":"1","/home/robert/Final Project/dApp-OnlineVote/src/App.tsx":"2","/home/robert/Final Project/dApp-OnlineVote/src/routes.ts":"3","/home/robert/Final Project/dApp-OnlineVote/src/components/Layout/index.tsx":"4","/home/robert/Final Project/dApp-OnlineVote/src/pages/PageNotFound/index.tsx":"5","/home/robert/Final Project/dApp-OnlineVote/src/config.tsx":"6","/home/robert/Final Project/dApp-OnlineVote/src/pages/Home/index.tsx":"7","/home/robert/Final Project/dApp-OnlineVote/src/components/PageTitle/index.tsx":"8","/home/robert/Final Project/dApp-OnlineVote/src/pages/UnlockPage/index.tsx":"9","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx":"10","/home/robert/Final Project/dApp-OnlineVote/src/pages/Transaction/index.tsx":"11","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/TopInfo.tsx":"12","/home/robert/Final Project/dApp-OnlineVote/src/components/Layout/Footer/index.tsx":"13","/home/robert/Final Project/dApp-OnlineVote/src/components/Layout/Navbar/index.tsx":"14","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/index.tsx":"15","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/TransactionsList.tsx":"16","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/txStatus.tsx":"17","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/StatusIcon.tsx":"18","/home/robert/Final Project/dApp-OnlineVote/src/apiRequests/index.tsx":"19","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Register.tsx":"20","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/CheckVote.tsx":"21","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexBlue.tsx":"22","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexRed.tsx":"23"},{"size":204,"mtime":1649698924255,"results":"24","hashOfConfig":"25"},{"size":1466,"mtime":1649840732225,"results":"26","hashOfConfig":"25"},{"size":1258,"mtime":1649409512460,"results":"27","hashOfConfig":"25"},{"size":774,"mtime":1649699216961,"results":"28","hashOfConfig":"25"},{"size":1080,"mtime":1645017405000,"results":"29","hashOfConfig":"25"},{"size":560,"mtime":1650216834321,"results":"30","hashOfConfig":"25"},{"size":11648,"mtime":1650120892402,"results":"31","hashOfConfig":"25"},{"size":282,"mtime":1645017405000,"results":"32","hashOfConfig":"25"},{"size":1900,"mtime":1649652114495,"results":"33","hashOfConfig":"25"},{"size":902,"mtime":1650217555748,"results":"34","hashOfConfig":"25"},{"size":1586,"mtime":1645017405000,"results":"35","hashOfConfig":"25"},{"size":883,"mtime":1650217551732,"results":"36","hashOfConfig":"25"},{"size":531,"mtime":1649849356829,"results":"37","hashOfConfig":"25"},{"size":2500,"mtime":1650133800789,"results":"38","hashOfConfig":"25"},{"size":1591,"mtime":1645017405000,"results":"39","hashOfConfig":"25"},{"size":3845,"mtime":1649417292651,"results":"40","hashOfConfig":"25"},{"size":140,"mtime":1645017405000,"results":"41","hashOfConfig":"25"},{"size":1190,"mtime":1645017405000,"results":"42","hashOfConfig":"25"},{"size":909,"mtime":1645017405000,"results":"43","hashOfConfig":"25"},{"size":7445,"mtime":1650123278992,"results":"44","hashOfConfig":"25"},{"size":6256,"mtime":1650070683519,"results":"45","hashOfConfig":"25"},{"size":5702,"mtime":1650125805295,"results":"46","hashOfConfig":"25"},{"size":5590,"mtime":1650229799501,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1hv8idt",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/robert/Final Project/dApp-OnlineVote/src/index.tsx",[],[],"/home/robert/Final Project/dApp-OnlineVote/src/App.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/routes.ts",[],"/home/robert/Final Project/dApp-OnlineVote/src/components/Layout/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/PageNotFound/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/config.tsx",["99"],"import * as Dapp from '@elrondnetwork/dapp-core';\n\nexport const contractAddress =\n  'erd1qqqqqqqqqqqqqpgqstk00828wnft7va8fakpmzxl3h6pcxamxl2su4lu7m';\n\nexport const contractAddress1 =\n  'erd1qqqqqqqqqqqqqpgqstk00828wnft7va8fakpmzxl3h6pcxamxl2su4lu7m';\n\nexport const contractAddress2 =\n  'erd1qqqqqqqqqqqqqpgqstk00828wnft7va8fakpmzxl3h6pcxamxl2su4lu7m';\n\nexport const dAppName = 'TSI - Online Voting Dapp';\n\nexport const apiAddress = 'https://devnet-api.elrond.com';\n\nexport const sendWallet =\n  'erd16wwuy5kk46auwuawurempkkvh0kjrkys30fjjlxp5ht6nj4uxl2sknxpmg';\n","/home/robert/Final Project/dApp-OnlineVote/src/pages/Home/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/components/PageTitle/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/UnlockPage/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Transaction/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/TopInfo.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/components/Layout/Footer/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/components/Layout/Navbar/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/TransactionsList.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/txStatus.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/StatusIcon.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/apiRequests/index.tsx",[],"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Register.tsx",["100","101","102","103","104","105"],"import * as React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  useGetNetworkConfig,\n  transactionServices,\n  refreshAccount\n} from '@elrondnetwork/dapp-core';\nimport { Alert, Form, Modal } from 'react-bootstrap';\nimport { contractAddress } from 'config';\n//import { SmartContractResults, SmartContractAbi, TokenIdentifierValue, AddressValue } from '@elrondnetwork/erdjs/out';\n\nconst RegisterInfo = () => {\n  const { address, account } = useGetAccountInfo();\n  const { network } = useGetNetworkConfig();\n  const isRegistered = Boolean(address);\n\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n\n  const { sendTransactions } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '1000000000000000000',\n      data: 'ping',\n      receiver: contractAddress\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Ping transaction',\n        errorMessage: 'An error has occured during Ping',\n        successMessage: 'Ping transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  //-- Registered button functionality part\n  const [idNational, setIdNational] = React.useState(null ? '' : String);\n  const [isBtnDisabled, setIsBtnDisabled] = React.useState(true);\n  let stateIdRegister = false;\n  const [faddress, setAddress] = React.useState('');\n  const [error, setError] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n\n  React.useEffect(() => {\n    if (idNational.length < 9) {\n      setIsBtnDisabled(true);\n    } else {\n      setIsBtnDisabled(false);\n    }\n  }, [idNational]);\n\n  function twoInOne() {\n    setIdNational(() => '');\n    setSuccess(false);\n    stateIdRegister = true;\n  }\n  function sendTok() {\n    setSuccess(true);\n  }\n\n  function handleIDChange(e: React.ChangeEvent<any>) {\n    setIdNational(e.target.value);\n  }\n  //---//\n  // function handleSubmit(e: React.ChangeEvent<any>) {\n  //   const accId = account.balance;\n  // }\n\n  //const fs = require('fs');\n  //const core = require('@elrondnetwork/elrond-core-js');\n\n  return (\n    <div className='container-fluid p-1'>\n      {isRegistered && !stateIdRegister && (\n        <div className='text-dark bg-light p-4 m-2 my-3 border rounded border-info border-1'>\n          <div className='mb-3'>\n            <h1 className='text-center'>Register to Vote</h1>\n          </div>\n          <div className='my-4'>\n            <form className='form-inline justify-content-center'>\n              <div className='form-group mb-2'>\n                <Form.Group onChange={handleIDChange}>\n                  <input\n                    type='text'\n                    autoComplete='off'\n                    maxLength={9}\n                    minLength={9}\n                    className='form-control'\n                    placeholder='National ID'\n                    id='inputID'\n                    value={idNational}\n                  ></input>\n                  <button\n                    disabled={isBtnDisabled}\n                    type='button'\n                    className='btn btn-success'\n                    onClick={sendTok}\n                  >\n                    Register\n                  </button>\n                  {success && (\n                    <Modal show={true} className='p-5'>\n                      <Modal.Header className='badge badge-warning'>\n                        <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                          User Authentication\n                        </div>\n                      </Modal.Header>\n                      <Modal.Body className='h2 p-5 m-2 text-center'>\n                        Your ID has been registered:&nbsp;{idNational}\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <button\n                          className='btn-success p-2 px-3 mx-3 my-2 rounded h4'\n                          onClick={twoInOne}\n                        >\n                          Close\n                        </button>\n                      </Modal.Footer>\n                    </Modal>\n                  )}\n                </Form.Group>\n              </div>\n            </form>\n            <span className='text-center d-flex justify-content-center '>\n              ID example format: AA000000A\n            </span>\n          </div>\n          <div className='p-2 m-1 bg-light border border-info border-1'>\n            <span className='h5'>Your address:&nbsp;</span>\n            <span data-testid='accountAddress'>\n              <a\n                className='text-dark'\n                href={`${network.explorerAddress}/address/${address}`}\n                {...{\n                  target: '_blank'\n                }}\n                rel='noopener noreferrer'\n                title='View in Explorer'\n              >\n                <DappUI.Trim\n                  data-testid='accountAddress'\n                  text={account.address}\n                />\n              </a>\n            </span>\n          </div>\n        </div>\n      )}\n      {!isRegistered && (\n        <div className='text-white bg-success p-4 m-2 my-3 rounded border-1'>\n          <h1 className='text-center pb-4'>\n            Already Voted for U.K. General Election 2024\n          </h1>\n          <div className='my-4'>\n            <span className='h4'>Your address and ID: {setIdNational}</span>\n            <span data-testid='accountAddress'>\n              <a\n                className='text-white h5'\n                href={`${network.explorerAddress}/address/${address}`}\n                {...{\n                  target: '_blank'\n                }}\n                rel='noopener noreferrer'\n                title='View in Explorer'\n              >\n                <DappUI.Trim data-testid='accountAddress' text={address} />\n              </a>\n            </span>\n          </div>\n          <div className='mb-2'>\n            <span className='h5'>Your National ID:&nbsp;</span>\n            <span className='h5 font-weight-bold' data-testid=''>\n              AA000000A\n            </span>\n          </div>\n        </div>\n      )}\n      {!isRegistered && (\n        <div className='text-dark bg-warning p-4 m-2 my-3 rounded border-1'>\n          <h1 className='text-center pb-4'>\n            You registered but you did not vote!\n          </h1>\n          <div className='my-4'>\n            <span className='h4'>Your address:</span>\n            <span data-testid='accountAddress'>\n              <a\n                className='text-dark h5'\n                href={`${network.explorerAddress}/address/${address}`}\n                {...{\n                  target: '_blank'\n                }}\n                rel='noopener noreferrer'\n                title='View in Explorer'\n              >\n                <DappUI.Trim data-testid='accountAddress' text={address} />\n              </a>\n            </span>\n          </div>\n          <div className='mb-2 text-dark'>\n            <span className='h5'>Your National ID:&nbsp;</span>\n            <span className='h5 font-weight-bold' data-testid=''>\n              AA000000A\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegisterInfo;\n","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/CheckVote.tsx",["106","107","108","109"],"import * as React from 'react';\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\nimport { contractAddress } from 'config';\nimport ActionsBlue from './Actions/indexBlue';\nimport ActionsRed from './Actions/indexRed';\nimport TopInfo from './TopInfo';\n\nconst StatutsVote = () => {\n  const { address, account } = useGetAccountInfo();\n\n  const isRegistered = Boolean(address);\n\n  return (\n    <div className='container-fluid p-1'>\n      {isRegistered && (\n        <div className='card-deck p-1'>\n          <div className='card p-2 pt-3 bg-light border-0'>\n            <div className='card bg-light shadow border-primary border-1 p-2 pb-3 mb-2'>\n              <h3 className='text-center mt-2 text-primary'>\n                Conservative Party Votes\n              </h3>\n              <div className='card d-flex justify-content-center px-2 pt-1 m-3 bg-light border-0'>\n                <h3 className='text-center'>45544444</h3>\n              </div>\n              <div className='card p-3 bg-light border-0'>\n                <img\n                  className='card-img-top img-fluid bg-primary p-1'\n                  src='../images/Boris-Johnson-profile.jpg'\n                ></img>\n                <div className='card-img-overlay'>\n                  <p className='card-text text-right'>\n                    <a\n                      href='https://pocketmags.com/prospect-magazine/augsept-21/articles/1009926/the-prime-etonian'\n                      className='text-light font-italic badge badge-primary'\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      Ilustration by Tim McDonagh\n                    </a>\n                  </p>\n                </div>\n              </div>\n              <div className='card p-2 my-2 mx-2 bg-light border-0'>\n                <ActionsBlue />\n              </div>\n            </div>\n          </div>\n          <div className='card p-2 pt-3 bg-light border-0'>\n            <div className='card bg-light shadow border-danger border-1 p-2 pb-3 mb-2'>\n              <h3 className='text-center mt-2 text-danger'>\n                Labour Party Votes\n              </h3>\n              <div className='card d-flex justify-content-center px-2 pt-1 m-3 bg-light border-0'>\n                <h3 className='text-center'>45544444</h3>\n              </div>\n              <div className='card p-3 bg-light border-0'>\n                <img\n                  className='card-img-top img-fluid bg-danger p-1'\n                  src='../images/Keir-Starmer-profile.jpg'\n                ></img>\n                <div className='card-img-overlay'>\n                  <p className='card-text text-right'>\n                    <a\n                      href='https://pocketmags.com/eu/prospect-magazine/apr-2020/articles/737871/keir-starmer-the-case-for-the-defence'\n                      className='text-light font-italic badge badge-danger'\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      Ilustration by Tim McDonagh\n                    </a>\n                  </p>\n                </div>\n              </div>\n              <div className='card p-2 my-2 mx-2 bg-light border-0'>\n                <ActionsRed />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {!isRegistered && (\n        <div className='card-deck p-1'>\n          <div className='card p-2 pt-3 bg-light border-0'>\n            <div className='card bg-warning shadow border-primary border-1 p-2 pb-3 mb-2'>\n              <h3 className='text-center mt-2 text-primary'>\n                Conservative Party Votes\n              </h3>\n              <div className='card d-flex justify-content-center px-2 pt-1 m-3 bg-warning border-0'>\n                <h3 className='text-center'>45544444</h3>\n              </div>\n              <div className='card p-3 bg-warning border-0'>\n                <img\n                  className='card-img-top img-fluid bg-primary p-1'\n                  src='../images/Boris-Johnson-profile.jpg'\n                ></img>\n                <div className='card-img-overlay'>\n                  <p className='card-text text-right'>\n                    <a\n                      href='https://pocketmags.com/prospect-magazine/augsept-21/articles/1009926/the-prime-etonian'\n                      className='text-light font-italic badge badge-primary'\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      Ilustration by Tim McDonagh\n                    </a>\n                  </p>\n                </div>\n              </div>\n              <div className='card p-2 my-2 mx-2 bg-warning border-0'></div>\n            </div>\n          </div>\n          <div className='card p-2 pt-3 bg-light border-0'>\n            <div className='card bg-warning shadow border-danger border-1 p-2 pb-3 mb-2'>\n              <h3 className='text-center mt-2 text-danger'>\n                Labour Party Votes\n              </h3>\n              <div className='card d-flex justify-content-center px-2 pt-1 m-3 bg-warning border-0'>\n                <h3 className='text-center'>45544444</h3>\n              </div>\n              <div className='card p-3 bg-warning border-0'>\n                <img\n                  className='card-img-top img-fluid bg-danger p-1'\n                  src='../images/Keir-Starmer-profile.jpg'\n                ></img>\n                <div className='card-img-overlay'>\n                  <p className='card-text text-right'>\n                    <a\n                      href='https://pocketmags.com/eu/prospect-magazine/apr-2020/articles/737871/keir-starmer-the-case-for-the-defence'\n                      className='text-light font-italic badge badge-danger'\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      Ilustration by Tim McDonagh\n                    </a>\n                  </p>\n                </div>\n              </div>\n              <div className='card p-2 my-2 mx-2 bg-warning border-0'></div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StatutsVote;\n","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexBlue.tsx",["110"],"import * as React from 'react';\nimport {\n  transactionServices,\n  useGetAccountInfo,\n  useGetPendingTransactions,\n  refreshAccount,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  ProxyProvider,\n  Query\n} from '@elrondnetwork/erdjs';\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport { contractAddress } from 'config';\n\nconst ActionsBlue = () => {\n  const account = useGetAccountInfo();\n  const { hasPendingTransactions } = useGetPendingTransactions();\n  const { network } = useGetNetworkConfig();\n  const { address } = account;\n\n  const [secondsLeft, setSecondsLeft] = React.useState<number>();\n  const [hasPing, setHasPing] = React.useState<boolean>();\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n\n  const mount = () => {\n    if (secondsLeft) {\n      const interval = setInterval(() => {\n        setSecondsLeft((existing) => {\n          if (existing) {\n            return existing - 1;\n          } else {\n            clearInterval(interval);\n            return 0;\n          }\n        });\n      }, 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(mount, [hasPing]);\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddress),\n      func: new ContractFunction('getTimeToPong'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          case undefined:\n            setHasPing(true);\n            break;\n          case '':\n            setSecondsLeft(0);\n            setHasPing(false);\n            break;\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setSecondsLeft(parseInt(decoded, 16));\n            setHasPing(false);\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasPendingTransactions]);\n\n  const { sendTransactions } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '1000000000000000000',\n      data: 'ping',\n      receiver: contractAddress\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Ping transaction',\n        errorMessage: 'An error has occured during Ping',\n        successMessage: 'Ping transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  const sendPongTransaction = async () => {\n    const pongTransaction = {\n      value: '0',\n      data: 'pong',\n      receiver: contractAddress\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: pongTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Pong transaction',\n        errorMessage: 'An error has occured during Pong',\n        successMessage: 'Pong transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  const pongAllowed = secondsLeft === 0 && !hasPendingTransactions;\n  const notAllowedClass = pongAllowed ? '' : 'not-allowed disabled';\n\n  const timeRemaining = moment()\n    .startOf('day')\n    .seconds(secondsLeft || 0)\n    .format('mm:ss');\n\n  return (\n    <div className='d-flex justify-content-center'>\n      {hasPing !== undefined && (\n        <>\n          {hasPing && !hasPendingTransactions ? (\n            <div\n              className='card row w-50 border-primary shadow mx-auto'\n              onClick={sendPingTransaction}\n            >\n              <button type='button' className='btn btn-primary m-2'>\n                Vote\n              </button>\n              <a href='/' className='text-dark'></a>\n            </div>\n          ) : (\n            <>\n              <div className='d-flex flex-column'>\n                <div\n                  {...{\n                    className: `action-btn ${notAllowedClass}`,\n                    ...(pongAllowed ? { onClick: sendPongTransaction } : {})\n                  }}\n                >\n                  <button className={`btn ${notAllowedClass}`}>\n                    <FontAwesomeIcon\n                      icon={faArrowDown}\n                      className='text-primary'\n                    />\n                  </button>\n                  <span className='text-white'>\n                    {pongAllowed ? (\n                      <a href='/' className='text-white text-decoration-none'>\n                        Pong\n                      </a>\n                    ) : (\n                      <>Pong</>\n                    )}\n                  </span>\n                </div>\n                {!pongAllowed && !hasPendingTransactions && (\n                  <span className='opacity-6 text-white'>\n                    {timeRemaining} until able to Pong\n                  </span>\n                )}\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ActionsBlue;\n","/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexRed.tsx",["111","112","113"],{"ruleId":"114","severity":1,"message":"115","line":1,"column":13,"nodeType":"116","messageId":"117","endLine":1,"endColumn":17},{"ruleId":"114","severity":1,"message":"118","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":24,"column":9,"nodeType":"116","messageId":"117","endLine":24,"endColumn":28},{"ruleId":"114","severity":1,"message":"120","line":50,"column":10,"nodeType":"116","messageId":"117","endLine":50,"endColumn":18},{"ruleId":"114","severity":1,"message":"121","line":50,"column":20,"nodeType":"116","messageId":"117","endLine":50,"endColumn":30},{"ruleId":"114","severity":1,"message":"122","line":51,"column":10,"nodeType":"116","messageId":"117","endLine":51,"endColumn":15},{"ruleId":"114","severity":1,"message":"123","line":51,"column":17,"nodeType":"116","messageId":"117","endLine":51,"endColumn":25},{"ruleId":"114","severity":1,"message":"124","line":2,"column":29,"nodeType":"116","messageId":"117","endLine":2,"endColumn":35},{"ruleId":"114","severity":1,"message":"125","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":25},{"ruleId":"114","severity":1,"message":"126","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":15},{"ruleId":"114","severity":1,"message":"127","line":9,"column":20,"nodeType":"116","messageId":"117","endLine":9,"endColumn":27},{"ruleId":"114","severity":1,"message":"128","line":16,"column":10,"nodeType":"116","messageId":"117","endLine":16,"endColumn":19},{"ruleId":"114","severity":1,"message":"128","line":16,"column":10,"nodeType":"116","messageId":"117","endLine":16,"endColumn":19},{"ruleId":"114","severity":1,"message":"129","line":16,"column":21,"nodeType":"116","messageId":"117","endLine":16,"endColumn":32},{"ruleId":"114","severity":1,"message":"130","line":17,"column":10,"nodeType":"116","messageId":"117","endLine":17,"endColumn":25},"@typescript-eslint/no-unused-vars","'Dapp' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'sendPingTransaction' is assigned a value but never used.","'faddress' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'DappUI' is defined but never used.","'contractAddress' is defined but never used.","'TopInfo' is defined but never used.","'account' is assigned a value but never used.","'faArrowUp' is defined but never used.","'faArrowDown' is defined but never used.","'FontAwesomeIcon' is defined but never used."]