{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGetAccountInfo, DappUI, transactionServices, refreshAccount, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { getTransactions } from 'apiRequests';\nimport { contractAddress } from 'config';\nimport TransactionsList from './TransactionsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = () => {\n  _s();\n\n  const {\n    network: {\n      apiAddress\n    }\n  } = useGetNetworkConfig();\n  const {\n    success,\n    fail,\n    hasActiveTransactions\n  } = transactionServices.useGetActiveTransactionsStatus();\n  const [state, setState] = React.useState({\n    transactions: [],\n    transactionsFetched: undefined\n  });\n  const account = useGetAccountInfo();\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress\n      }).then(_ref => {\n        let {\n          data,\n          success: transactionsFetched\n        } = _ref;\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched\n        });\n      });\n    }\n  };\n\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n  const {\n    transactions\n  } = state;\n  return transactions.length > 0 ? /*#__PURE__*/_jsxDEV(TransactionsList, {\n    transactions: transactions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(DappUI.PageState, {\n      icon: faExchangeAlt,\n      className: \"text-muted fa-3x\",\n      title: \"No Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"Xr2Y70KMF2kZ3upQ0kIS/gqW7rI=\", false, function () {\n  return [useGetNetworkConfig, transactionServices.useGetActiveTransactionsStatus, useGetAccountInfo];\n});\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/index.tsx"],"names":["React","useGetAccountInfo","DappUI","transactionServices","refreshAccount","useGetNetworkConfig","faExchangeAlt","getTransactions","contractAddress","TransactionsList","Transactions","network","apiAddress","success","fail","hasActiveTransactions","useGetActiveTransactionsStatus","state","setState","useState","transactions","transactionsFetched","undefined","account","fetchData","address","timeout","then","data","useEffect","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,MAFF,EAGEC,mBAHF,EAIEC,cAJF,EAKEC,mBALF,QAMO,0BANP;AAOA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEFP,mBAAmB,EAFvB;AAGA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MACJZ,mBAAmB,CAACa,8BAApB,EADF;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACmB,QAAN,CAA0B;AAClDC,IAAAA,YAAY,EAAE,EADoC;AAElDC,IAAAA,mBAAmB,EAAEC;AAF6B,GAA1B,CAA1B;AAIA,QAAMC,OAAO,GAAGtB,iBAAiB,EAAjC;;AAEA,QAAMuB,SAAS,GAAG,MAAM;AACtB,QAAIX,OAAO,IAAIC,IAAX,IAAmB,CAACC,qBAAxB,EAA+C;AAC7CR,MAAAA,eAAe,CAAC;AACdK,QAAAA,UADc;AAEda,QAAAA,OAAO,EAAEF,OAAO,CAACE,OAFH;AAGdC,QAAAA,OAAO,EAAE,IAHK;AAIdlB,QAAAA;AAJc,OAAD,CAAf,CAKGmB,IALH,CAKQ,QAA4C;AAAA,YAA3C;AAAEC,UAAAA,IAAF;AAAQf,UAAAA,OAAO,EAAEQ;AAAjB,SAA2C;AAClDjB,QAAAA,cAAc;AACdc,QAAAA,QAAQ,CAAC;AACPE,UAAAA,YAAY,EAAEQ,IADP;AAEPP,UAAAA;AAFO,SAAD,CAAR;AAID,OAXD;AAYD;AACF,GAfD;;AAiBArB,EAAAA,KAAK,CAAC6B,SAAN,CAAgBL,SAAhB,EAA2B,CAACX,OAAD,EAAUC,IAAV,EAAgBC,qBAAhB,CAA3B;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAmBH,KAAzB;AAEA,SAAOG,YAAY,CAACU,MAAb,GAAsB,CAAtB,gBACL,QAAC,gBAAD;AAAkB,IAAA,YAAY,EAAEV;AAAhC;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,MAAD,CAAQ,SAAR;AACE,MAAA,IAAI,EAAEd,aADR;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAWD,CA7CD;;GAAMI,Y;UAGAL,mB,EAEFF,mBAAmB,CAACa,8B,EAMNf,iB;;;KAXZS,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  transactionServices,\n  refreshAccount,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { getTransactions } from 'apiRequests';\nimport { contractAddress } from 'config';\nimport TransactionsList from './TransactionsList';\nimport { StateType } from './types';\n\nconst Transactions = () => {\n  const {\n    network: { apiAddress }\n  } = useGetNetworkConfig();\n  const { success, fail, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const [state, setState] = React.useState<StateType>({\n    transactions: [],\n    transactionsFetched: undefined\n  });\n  const account = useGetAccountInfo();\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress\n      }).then(({ data, success: transactionsFetched }) => {\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched\n        });\n      });\n    }\n  };\n\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n\n  const { transactions } = state;\n\n  return transactions.length > 0 ? (\n    <TransactionsList transactions={transactions} />\n  ) : (\n    <div className='my-5'>\n      <DappUI.PageState\n        icon={faExchangeAlt}\n        className='text-muted fa-3x'\n        title='No Transactions'\n      />\n    </div>\n  );\n};\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}