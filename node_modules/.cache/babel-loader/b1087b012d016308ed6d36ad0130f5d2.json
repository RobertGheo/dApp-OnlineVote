{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/App.tsx\";\nimport React from 'react';\nimport { DappUI, DappProvider } from '@elrondnetwork/dapp-core';\nimport { Route, Routes, BrowserRouter as Router } from 'react-router-dom';\nimport Layout from 'components/Layout';\nimport PageNotFound from 'pages/PageNotFound';\nimport { routeNames } from 'routes';\nimport routes from 'routes';\nimport '@elrondnetwork/dapp-core/build/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst environment = 'devnet';\nconst {\n  TransactionsToastList,\n  SignTransactionsModals,\n  NotificationModal,\n  DappCorePages: {\n    UnlockPage\n  }\n} = DappUI;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(DappProvider, {\n      environment: environment,\n      customNetworkConfig: {\n        name: 'customConfig',\n        apiTimeout: 6000\n      },\n      completedTransactionsDelay: 200,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(TransactionsToastList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NotificationModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignTransactionsModals, {\n          className: \"custom-class-for-modals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: routeNames.unlockP,\n            element: /*#__PURE__*/_jsxDEV(UnlockPage, {\n              loginRoute: routeNames.dashboard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), routes.map((route, index) => /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            element: /*#__PURE__*/_jsxDEV(route.component, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 26\n            }, this)\n          }, 'route-key-' + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/App.tsx"],"names":["React","DappUI","DappProvider","Route","Routes","BrowserRouter","Router","Layout","PageNotFound","routeNames","routes","environment","TransactionsToastList","SignTransactionsModals","NotificationModal","DappCorePages","UnlockPage","App","name","apiTimeout","unlockP","dashboard","map","route","index","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,0BAArC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAa,IAAIC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,0CAAP;;AAEA,MAAMC,WAAW,GAAG,QAApB;AAEA,MAAM;AACJC,EAAAA,qBADI;AAEJC,EAAAA,sBAFI;AAGJC,EAAAA,iBAHI;AAIJC,EAAAA,aAAa,EAAE;AAAEC,IAAAA;AAAF;AAJX,IAKFf,MALJ;;AAOA,MAAMgB,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,WAAW,EAAEN,WADf;AAEE,MAAA,mBAAmB,EAAE;AAAEO,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,UAAU,EAAE;AAApC,OAFvB;AAGE,MAAA,0BAA0B,EAAE,GAH9B;AAAA,6BAKE,QAAC,MAAD;AAAA,gCACE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,sBAAD;AAAwB,UAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAEV,UAAU,CAACW,OADnB;AAEE,YAAA,OAAO,eAAE,QAAC,UAAD;AAAY,cAAA,UAAU,EAAEX,UAAU,CAACY;AAAnC;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,kBADF,EAKGX,MAAM,CAACY,GAAP,CAAW,CAACC,KAAD,EAAaC,KAAb,kBACV,QAAC,KAAD;AACE,YAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAGE,YAAA,OAAO,eAAE,QAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAHX,aAEO,eAAeD,KAFtB;AAAA;AAAA;AAAA;AAAA,kBADD,CALH,eAYE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA9BD;;KAAMP,G;AAgCN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { DappUI, DappProvider } from '@elrondnetwork/dapp-core';\nimport { Route, Routes, BrowserRouter as Router } from 'react-router-dom';\nimport Layout from 'components/Layout';\nimport PageNotFound from 'pages/PageNotFound';\nimport { routeNames } from 'routes';\nimport routes from 'routes';\nimport '@elrondnetwork/dapp-core/build/index.css';\n\nconst environment = 'devnet';\n\nconst {\n  TransactionsToastList,\n  SignTransactionsModals,\n  NotificationModal,\n  DappCorePages: { UnlockPage }\n} = DappUI;\n\nconst App = () => {\n  return (\n    <Router>\n      <DappProvider\n        environment={environment}\n        customNetworkConfig={{ name: 'customConfig', apiTimeout: 6000 }}\n        completedTransactionsDelay={200}\n      >\n        <Layout>\n          <TransactionsToastList />\n          <NotificationModal />\n          <SignTransactionsModals className='custom-class-for-modals' />\n          <Routes>\n            <Route\n              path={routeNames.unlockP}\n              element={<UnlockPage loginRoute={routeNames.dashboard} />}\n            />\n            {routes.map((route: any, index: number) => (\n              <Route\n                path={route.path}\n                key={'route-key-' + index}\n                element={<route.component />}\n              />\n            ))}\n            <Route path='*' element={<PageNotFound />} />\n          </Routes>\n        </Layout>\n      </DappProvider>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}