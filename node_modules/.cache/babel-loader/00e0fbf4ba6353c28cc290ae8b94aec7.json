{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldsBinaryCodec = void 0;\n\nconst typesystem_1 = require(\"../typesystem\");\n\nclass FieldsBinaryCodec {\n  constructor(binaryCodec) {\n    this.binaryCodec = binaryCodec;\n  }\n\n  decodeNested(buffer, fieldDefinitions) {\n    let fields = [];\n    let totalLength = 0;\n\n    for (const fieldDefinition of fieldDefinitions) {\n      let [decoded, decodedLength] = this.binaryCodec.decodeNested(buffer, fieldDefinition.type);\n      buffer = buffer.slice(decodedLength);\n      totalLength += decodedLength;\n      let field = new typesystem_1.Field(decoded, fieldDefinition.name);\n      fields.push(field);\n    }\n\n    return [fields, totalLength];\n  }\n\n  encodeNested(fields) {\n    let buffers = [];\n\n    for (const field of fields) {\n      let fieldBuffer = this.binaryCodec.encodeNested(field.value);\n      buffers.push(fieldBuffer);\n    }\n\n    return Buffer.concat(buffers);\n  }\n\n}\n\nexports.FieldsBinaryCodec = FieldsBinaryCodec;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA,MAAaA,iBAAb,CAA8B;AAG1BC,cAAYC,WAAZ,EAAoC;AAChC,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAEDC,cAAY,CAACC,MAAD,EAAiBC,gBAAjB,EAAoD;AAC5D,QAAIC,MAAM,GAAY,EAAtB;AACA,QAAIC,WAAW,GAAG,CAAlB;;AAEA,SAAK,MAAMC,eAAX,IAA8BH,gBAA9B,EAAgD;AAC5C,UAAI,CAACI,OAAD,EAAUC,aAAV,IAA2B,KAAKR,WAAL,CAAiBC,YAAjB,CAA8BC,MAA9B,EAAsCI,eAAe,CAACG,IAAtD,CAA/B;AACAP,YAAM,GAAGA,MAAM,CAACQ,KAAP,CAAaF,aAAb,CAAT;AACAH,iBAAW,IAAIG,aAAf;AAEA,UAAIG,KAAK,GAAG,IAAIC,kBAAJ,CAAUL,OAAV,EAAmBD,eAAe,CAACO,IAAnC,CAAZ;AACAT,YAAM,CAACU,IAAP,CAAYH,KAAZ;AACH;;AAED,WAAO,CAACP,MAAD,EAASC,WAAT,CAAP;AACH;;AAEDU,cAAY,CAACX,MAAD,EAA6B;AACrC,QAAIY,OAAO,GAAa,EAAxB;;AAEA,SAAK,MAAML,KAAX,IAAoBP,MAApB,EAA4B;AACxB,UAAIa,WAAW,GAAG,KAAKjB,WAAL,CAAiBe,YAAjB,CAA8BJ,KAAK,CAACO,KAApC,CAAlB;AACAF,aAAO,CAACF,IAAR,CAAaG,WAAb;AACH;;AAED,WAAOE,MAAM,CAACC,MAAP,CAAcJ,OAAd,CAAP;AACH;;AAhCyB;;AAA9BK","names":["FieldsBinaryCodec","constructor","binaryCodec","decodeNested","buffer","fieldDefinitions","fields","totalLength","fieldDefinition","decoded","decodedLength","type","slice","field","typesystem_1","name","push","encodeNested","buffers","fieldBuffer","value","Buffer","concat","exports"],"sourceRoot":"","sources":["../../../src/smartcontracts/codec/fields.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}