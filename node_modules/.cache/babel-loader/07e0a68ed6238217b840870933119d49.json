{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FieldsBinaryCodec = void 0;\n\nconst typesystem_1 = require(\"../typesystem\");\n\nclass FieldsBinaryCodec {\n  constructor(binaryCodec) {\n    this.binaryCodec = binaryCodec;\n  }\n\n  decodeNested(buffer, fieldDefinitions) {\n    let fields = [];\n    let totalLength = 0;\n\n    for (const fieldDefinition of fieldDefinitions) {\n      let [decoded, decodedLength] = this.binaryCodec.decodeNested(buffer, fieldDefinition.type);\n      buffer = buffer.slice(decodedLength);\n      totalLength += decodedLength;\n      let field = new typesystem_1.Field(decoded, fieldDefinition.name);\n      fields.push(field);\n    }\n\n    return [fields, totalLength];\n  }\n\n  encodeNested(fields) {\n    let buffers = [];\n\n    for (const field of fields) {\n      let fieldBuffer = this.binaryCodec.encodeNested(field.value);\n      buffers.push(fieldBuffer);\n    }\n\n    return Buffer.concat(buffers);\n  }\n\n}\n\nexports.FieldsBinaryCodec = FieldsBinaryCodec;","map":{"version":3,"sources":["../../../src/smartcontracts/codec/fields.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAGA,MAAa,iBAAb,CAA8B;AAG1B,EAAA,WAAA,CAAY,WAAZ,EAAoC;AAChC,SAAK,WAAL,GAAmB,WAAnB;AACH;;AAED,EAAA,YAAY,CAAC,MAAD,EAAiB,gBAAjB,EAAoD;AAC5D,QAAI,MAAM,GAAY,EAAtB;AACA,QAAI,WAAW,GAAG,CAAlB;;AAEA,SAAK,MAAM,eAAX,IAA8B,gBAA9B,EAAgD;AAC5C,UAAI,CAAC,OAAD,EAAU,aAAV,IAA2B,KAAK,WAAL,CAAiB,YAAjB,CAA8B,MAA9B,EAAsC,eAAe,CAAC,IAAtD,CAA/B;AACA,MAAA,MAAM,GAAG,MAAM,CAAC,KAAP,CAAa,aAAb,CAAT;AACA,MAAA,WAAW,IAAI,aAAf;AAEA,UAAI,KAAK,GAAG,IAAI,YAAA,CAAA,KAAJ,CAAU,OAAV,EAAmB,eAAe,CAAC,IAAnC,CAAZ;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACH;;AAED,WAAO,CAAC,MAAD,EAAS,WAAT,CAAP;AACH;;AAED,EAAA,YAAY,CAAC,MAAD,EAA6B;AACrC,QAAI,OAAO,GAAa,EAAxB;;AAEA,SAAK,MAAM,KAAX,IAAoB,MAApB,EAA4B;AACxB,UAAI,WAAW,GAAG,KAAK,WAAL,CAAiB,YAAjB,CAA8B,KAAK,CAAC,KAApC,CAAlB;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,WAAb;AACH;;AAED,WAAO,MAAM,CAAC,MAAP,CAAc,OAAd,CAAP;AACH;;AAhCyB;;AAA9B,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldsBinaryCodec = void 0;\nconst typesystem_1 = require(\"../typesystem\");\nclass FieldsBinaryCodec {\n    constructor(binaryCodec) {\n        this.binaryCodec = binaryCodec;\n    }\n    decodeNested(buffer, fieldDefinitions) {\n        let fields = [];\n        let totalLength = 0;\n        for (const fieldDefinition of fieldDefinitions) {\n            let [decoded, decodedLength] = this.binaryCodec.decodeNested(buffer, fieldDefinition.type);\n            buffer = buffer.slice(decodedLength);\n            totalLength += decodedLength;\n            let field = new typesystem_1.Field(decoded, fieldDefinition.name);\n            fields.push(field);\n        }\n        return [fields, totalLength];\n    }\n    encodeNested(fields) {\n        let buffers = [];\n        for (const field of fields) {\n            let fieldBuffer = this.binaryCodec.encodeNested(field.value);\n            buffers.push(fieldBuffer);\n        }\n        return Buffer.concat(buffers);\n    }\n}\nexports.FieldsBinaryCodec = FieldsBinaryCodec;\n//# sourceMappingURL=fields.js.map"]},"metadata":{},"sourceType":"script"}