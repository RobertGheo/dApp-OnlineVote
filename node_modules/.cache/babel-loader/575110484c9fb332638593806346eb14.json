{"ast":null,"code":"import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Transaction from './pages/Transaction';\nimport UnlockRoute from './pages/UnlockPage';\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlockP: '/unlockPage',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect'\n};\nconst routes = [{\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.unlockP,\n  title: 'Unlock',\n  component: UnlockRoute\n}, {\n  path: routeNames.dashboard,\n  title: 'Dashboard',\n  component: Dashboard,\n  authenticatedRoute: true\n}, {\n  path: routeNames.transaction,\n  title: 'Transaction',\n  component: Transaction\n}];\nconst mappedRoutes = routes.map(route => {\n  const title = route.title ? `${route.title} • ${dAppName}` : `Elrond ${dAppName}`;\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\nexport default mappedRoutes;","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/routes.ts"],"names":["dAppName","withPageTitle","Dashboard","Home","Transaction","UnlockRoute","routeNames","home","dashboard","transaction","unlockP","ledger","walletconnect","routes","path","title","component","authenticatedRoute","mappedRoutes","map","route","requiresAuth","Boolean","wrappedComponent"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,GADkB;AAExBC,EAAAA,SAAS,EAAE,YAFa;AAGxBC,EAAAA,WAAW,EAAE,cAHW;AAIxBC,EAAAA,OAAO,EAAE,aAJe;AAKxBC,EAAAA,MAAM,EAAE,SALgB;AAMxBC,EAAAA,aAAa,EAAE;AANS,CAAnB;AASP,MAAMC,MAAkB,GAAG,CACzB;AACEC,EAAAA,IAAI,EAAER,UAAU,CAACC,IADnB;AAEEQ,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEb;AAHb,CADyB,EAMzB;AACEW,EAAAA,IAAI,EAAER,UAAU,CAACI,OADnB;AAEEK,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,SAAS,EAAEX;AAHb,CANyB,EAWzB;AACES,EAAAA,IAAI,EAAER,UAAU,CAACE,SADnB;AAEEO,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,SAAS,EAAEd,SAHb;AAIEe,EAAAA,kBAAkB,EAAE;AAJtB,CAXyB,EAiBzB;AACEH,EAAAA,IAAI,EAAER,UAAU,CAACG,WADnB;AAEEM,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,SAAS,EAAEZ;AAHb,CAjByB,CAA3B;AAwBA,MAAMc,YAAY,GAAGL,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;AACzC,QAAML,KAAK,GAAGK,KAAK,CAACL,KAAN,GACT,GAAEK,KAAK,CAACL,KAAM,MAAKf,QAAS,EADnB,GAET,UAASA,QAAS,EAFvB;AAIA,QAAMqB,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACH,kBAAP,CAA5B;AACA,QAAMM,gBAAgB,GAAGtB,aAAa,CAACc,KAAD,EAAQK,KAAK,CAACJ,SAAd,CAAtC;AAEA,SAAO;AACLF,IAAAA,IAAI,EAAEM,KAAK,CAACN,IADP;AAELE,IAAAA,SAAS,EAAEO,gBAFN;AAGLN,IAAAA,kBAAkB,EAAEI;AAHf,GAAP;AAKD,CAboB,CAArB;AAeA,eAAeH,YAAf","sourcesContent":["import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Transaction from './pages/Transaction';\nimport UnlockRoute from './pages/UnlockPage';\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlockP: '/unlockPage',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect'\n};\n\nconst routes: Array<any> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.unlockP,\n    title: 'Unlock',\n    component: UnlockRoute\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.transaction,\n    title: 'Transaction',\n    component: Transaction\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} • ${dAppName}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"]},"metadata":{},"sourceType":"module"}