{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProxyProvider = void 0;\n\nconst axios_1 = __importDefault(require(\"axios\"));\n\nconst transaction_1 = require(\"./transaction\");\n\nconst networkConfig_1 = require(\"./networkConfig\");\n\nconst errors = __importStar(require(\"./errors\"));\n\nconst account_1 = require(\"./account\");\n\nconst queryResponse_1 = require(\"./smartcontracts/queryResponse\");\n\nconst logger_1 = require(\"./logger\");\n\nconst networkStatus_1 = require(\"./networkStatus\");\n\nconst transactionOnNetwork_1 = require(\"./transactionOnNetwork\");\n\nconst constants_1 = require(\"./constants\");\n/**\n * This will be deprecated once all the endpoints move to ApiProvider\n */\n\n\nclass ProxyProvider {\n  /**\n   * Creates a new ProxyProvider.\n   * @param url the URL of the Elrond Proxy\n   * @param config axios request config options\n   */\n  constructor(url, config) {\n    this.url = url;\n    this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n  }\n  /**\n   * Fetches the state of an {@link Account}.\n   */\n\n\n  getAccount(address) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`address/${address.bech32()}`, response => account_1.AccountOnNetwork.fromHttpResponse(response.account));\n    });\n  }\n\n  getAddressEsdtList(address) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`address/${address.bech32()}/esdt`, response => response.esdts);\n    });\n  }\n\n  getAddressEsdt(address, tokenIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`address/${address.bech32()}/esdt/${tokenIdentifier}`, response => response.tokenData);\n    });\n  }\n\n  getAddressNft(address, tokenIdentifier, nonce) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`address/${address.bech32()}/nft/${tokenIdentifier}/nonce/${nonce}`, response => response.tokenData);\n    });\n  }\n  /**\n   * Queries a Smart Contract - runs a pure function defined by the contract and returns its results.\n   */\n\n\n  queryContract(query) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        let data = query.toHttpRequest();\n        return this.doPostGeneric(\"vm-values/query\", data, response => queryResponse_1.QueryResponse.fromHttpResponse(response.data || response.vmOutput));\n      } catch (err) {\n        throw errors.ErrContractQuery.increaseSpecificity(err);\n      }\n    });\n  }\n  /**\n   * Broadcasts an already-signed {@link Transaction}.\n   */\n\n\n  sendTransaction(tx) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doPostGeneric(\"transaction/send\", tx.toSendable(), response => new transaction_1.TransactionHash(response.txHash));\n    });\n  }\n  /**\n   * Simulates the processing of an already-signed {@link Transaction}.\n   */\n\n\n  simulateTransaction(tx) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doPostGeneric(\"transaction/simulate\", tx.toSendable(), response => response);\n    });\n  }\n  /**\n   * Fetches the state of a {@link Transaction}.\n   */\n\n\n  getTransaction(txHash, hintSender, withResults) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let url = this.buildUrlWithQueryParameters(`transaction/${txHash.toString()}`, {\n        withSender: hintSender ? hintSender.bech32() : \"\",\n        withResults: withResults ? \"true\" : \"\"\n      });\n      return this.doGetGeneric(url, response => transactionOnNetwork_1.TransactionOnNetwork.fromHttpResponse(response.transaction));\n    });\n  }\n  /**\n   * Queries the status of a {@link Transaction}.\n   */\n\n\n  getTransactionStatus(txHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`transaction/${txHash.toString()}/status`, response => new transaction_1.TransactionStatus(response.status));\n    });\n  }\n  /**\n   * Fetches the Network configuration.\n   */\n\n\n  getNetworkConfig() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(\"network/config\", response => networkConfig_1.NetworkConfig.fromHttpResponse(response.config));\n    });\n  }\n  /**\n   * Fetches the network status configuration.\n   */\n\n\n  getNetworkStatus() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(\"network/status/4294967295\", response => networkStatus_1.NetworkStatus.fromHttpResponse(response.status));\n    });\n  }\n  /**\n   * Get method that receives the resource url and on callback the method used to map the response.\n   */\n\n\n  doGetGeneric(resourceUrl, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let response = yield this.doGet(resourceUrl);\n      return callback(response);\n    });\n  }\n  /**\n   * Post method that receives the resource url, the post payload and on callback the method used to map the response.\n   */\n\n\n  doPostGeneric(resourceUrl, payload, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let response = yield this.doPost(resourceUrl, payload);\n      return callback(response);\n    });\n  }\n\n  doGet(resourceUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        let url = `${this.url}/${resourceUrl}`;\n        let response = yield axios_1.default.get(url, this.config);\n        let payload = response.data.data;\n        return payload;\n      } catch (error) {\n        this.handleApiError(error, resourceUrl);\n      }\n    });\n  }\n\n  doPost(resourceUrl, payload) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        let url = `${this.url}/${resourceUrl}`;\n        let response = yield axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }));\n        let responsePayload = response.data.data;\n        return responsePayload;\n      } catch (error) {\n        this.handleApiError(error, resourceUrl);\n      }\n    });\n  }\n\n  buildUrlWithQueryParameters(endpoint, params) {\n    let searchParams = new URLSearchParams();\n\n    for (let [key, value] of Object.entries(params)) {\n      if (value) {\n        searchParams.append(key, value);\n      }\n    }\n\n    return `${endpoint}?${searchParams.toString()}`;\n  }\n\n  handleApiError(error, resourceUrl) {\n    if (!error.response) {\n      logger_1.Logger.warn(error);\n      throw new errors.ErrApiProviderGet(resourceUrl, error.toString(), error);\n    }\n\n    let errorData = error.response.data;\n    let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n    throw new errors.ErrApiProviderGet(resourceUrl, originalErrorMessage, error);\n  }\n\n}\n\nexports.ProxyProvider = ProxyProvider;","map":{"version":3,"sources":["../src/proxyProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyProvider = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst transaction_1 = require(\"./transaction\");\nconst networkConfig_1 = require(\"./networkConfig\");\nconst errors = __importStar(require(\"./errors\"));\nconst account_1 = require(\"./account\");\nconst queryResponse_1 = require(\"./smartcontracts/queryResponse\");\nconst logger_1 = require(\"./logger\");\nconst networkStatus_1 = require(\"./networkStatus\");\nconst transactionOnNetwork_1 = require(\"./transactionOnNetwork\");\nconst constants_1 = require(\"./constants\");\n/**\n * This will be deprecated once all the endpoints move to ApiProvider\n */\nclass ProxyProvider {\n    /**\n     * Creates a new ProxyProvider.\n     * @param url the URL of the Elrond Proxy\n     * @param config axios request config options\n     */\n    constructor(url, config) {\n        this.url = url;\n        this.config = Object.assign(Object.assign({}, constants_1.defaultConfig), config);\n    }\n    /**\n     * Fetches the state of an {@link Account}.\n     */\n    getAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`address/${address.bech32()}`, (response) => account_1.AccountOnNetwork.fromHttpResponse(response.account));\n        });\n    }\n    getAddressEsdtList(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`address/${address.bech32()}/esdt`, (response) => response.esdts);\n        });\n    }\n    getAddressEsdt(address, tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`address/${address.bech32()}/esdt/${tokenIdentifier}`, (response) => response.tokenData);\n        });\n    }\n    getAddressNft(address, tokenIdentifier, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`address/${address.bech32()}/nft/${tokenIdentifier}/nonce/${nonce}`, (response) => response.tokenData);\n        });\n    }\n    /**\n     * Queries a Smart Contract - runs a pure function defined by the contract and returns its results.\n     */\n    queryContract(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let data = query.toHttpRequest();\n                return this.doPostGeneric(\"vm-values/query\", data, (response) => queryResponse_1.QueryResponse.fromHttpResponse(response.data || response.vmOutput));\n            }\n            catch (err) {\n                throw errors.ErrContractQuery.increaseSpecificity(err);\n            }\n        });\n    }\n    /**\n     * Broadcasts an already-signed {@link Transaction}.\n     */\n    sendTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doPostGeneric(\"transaction/send\", tx.toSendable(), (response) => new transaction_1.TransactionHash(response.txHash));\n        });\n    }\n    /**\n     * Simulates the processing of an already-signed {@link Transaction}.\n     */\n    simulateTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doPostGeneric(\"transaction/simulate\", tx.toSendable(), (response) => response);\n        });\n    }\n    /**\n     * Fetches the state of a {@link Transaction}.\n     */\n    getTransaction(txHash, hintSender, withResults) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = this.buildUrlWithQueryParameters(`transaction/${txHash.toString()}`, {\n                withSender: hintSender ? hintSender.bech32() : \"\",\n                withResults: withResults ? \"true\" : \"\",\n            });\n            return this.doGetGeneric(url, (response) => transactionOnNetwork_1.TransactionOnNetwork.fromHttpResponse(response.transaction));\n        });\n    }\n    /**\n     * Queries the status of a {@link Transaction}.\n     */\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(`transaction/${txHash.toString()}/status`, (response) => new transaction_1.TransactionStatus(response.status));\n        });\n    }\n    /**\n     * Fetches the Network configuration.\n     */\n    getNetworkConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(\"network/config\", (response) => networkConfig_1.NetworkConfig.fromHttpResponse(response.config));\n        });\n    }\n    /**\n     * Fetches the network status configuration.\n     */\n    getNetworkStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.doGetGeneric(\"network/status/4294967295\", (response) => networkStatus_1.NetworkStatus.fromHttpResponse(response.status));\n        });\n    }\n    /**\n     * Get method that receives the resource url and on callback the method used to map the response.\n     */\n    doGetGeneric(resourceUrl, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGet(resourceUrl);\n            return callback(response);\n        });\n    }\n    /**\n     * Post method that receives the resource url, the post payload and on callback the method used to map the response.\n     */\n    doPostGeneric(resourceUrl, payload, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPost(resourceUrl, payload);\n            return callback(response);\n        });\n    }\n    doGet(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = `${this.url}/${resourceUrl}`;\n                let response = yield axios_1.default.get(url, this.config);\n                let payload = response.data.data;\n                return payload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    doPost(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let url = `${this.url}/${resourceUrl}`;\n                let response = yield axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), { headers: {\n                        \"Content-Type\": \"application/json\",\n                    } }));\n                let responsePayload = response.data.data;\n                return responsePayload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    buildUrlWithQueryParameters(endpoint, params) {\n        let searchParams = new URLSearchParams();\n        for (let [key, value] of Object.entries(params)) {\n            if (value) {\n                searchParams.append(key, value);\n            }\n        }\n        return `${endpoint}?${searchParams.toString()}`;\n    }\n    handleApiError(error, resourceUrl) {\n        if (!error.response) {\n            logger_1.Logger.warn(error);\n            throw new errors.ErrApiProviderGet(resourceUrl, error.toString(), error);\n        }\n        let errorData = error.response.data;\n        let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n        throw new errors.ErrApiProviderGet(resourceUrl, originalErrorMessage, error);\n    }\n}\nexports.ProxyProvider = ProxyProvider;\n//# sourceMappingURL=proxyProvider.js.map"]},"metadata":{},"sourceType":"script"}