{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/RegisterID/index.tsx\",\n    _s = $RefreshSig$();\n\nimport fs from 'fs';\nimport path, { dirname } from 'path';\nimport { fileURLToPath } from 'url';\nimport * as React from 'react';\nimport { useGetAccountInfo, DappUI, useGetNetworkConfig, transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport { ProxyProvider, UserSigner, Account, Transaction, Address, Balance, GasLimit, NetworkConfig } from '@elrondnetwork/erdjs';\nimport { Form, Modal } from 'react-bootstrap';\nimport { contractClaim } from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterInfo = () => {\n  _s();\n\n  const {\n    address,\n    account\n  } = useGetAccountInfo();\n  const {\n    network\n  } = useGetNetworkConfig();\n  const isRegistered = Boolean(address); //Egld Claim Faucet for blockchain transaction fee\n\n  const PemFile = 'wallet-owner.pem';\n  const ProxyUrl = 'https://devnet-gateway.elrond.com';\n\n  const __dirname = dirname(fileURLToPath(import.meta.url));\n\n  const SendEgldFee = async () => {\n    const provider = new ProxyProvider(network.apiAddress);\n    const signer = await getSigner();\n    const accountSender = new Account(signer.getAddress());\n    await NetworkConfig.getDefault().sync(provider);\n    await accountSender.sync(provider);\n    const tx = new Transaction({\n      gasLimit: new GasLimit(500000),\n      receiver: new Address(address),\n      value: Balance.egld(0.0006)\n    });\n    tx.setNonce(accountSender.nonce);\n    await signer.sign(tx);\n    await tx.send(provider);\n  };\n\n  const getSigner = async () => {\n    const pemWalletPath = path.relative(__dirname, PemFile);\n    const pemWalletContents = await fs.promises.readFile(pemWalletPath, {\n      encoding: 'utf8'\n    });\n    return UserSigner.fromPem(pemWalletContents);\n  };\n\n  const\n  /*transactionSessionId*/\n  [, setTransactionSessionId] = React.useState(null);\n  const {\n    sendTransactions\n  } = transactionServices;\n\n  const claimVotetToken = async () => {\n    const claimTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'claim',\n      receiver: contractClaim\n    };\n    await refreshAccount();\n    const {\n      sessionId\n      /*, error*/\n\n    } = await sendTransactions({\n      transactions: claimTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Claim Vote transaction',\n        errorMessage: 'An error has occured during Claim',\n        successMessage: 'Claim Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n\n    twoInOneCall();\n  }; //-- Registered button functionality part\n\n\n  const [idNational, setIdNational] = React.useState(null ? '' : String); //set Id input state\n\n  const [isBtnDisabled, setIsBtnDisabled] = React.useState(true);\n  const [success, setSuccess] = React.useState(false);\n  React.useEffect(() => {\n    if (idNational.length < 9) {\n      setIsBtnDisabled(true);\n    } else {\n      setIsBtnDisabled(false);\n    }\n  }, [idNational]);\n\n  function handleIDChange(e) {\n    setIdNational(e.target.value);\n  }\n\n  function twoInOneCall() {\n    //await new Promise((resolve) => setTimeout(resolve, 3000));\n    setIdNational(() => '');\n    setSuccess(false);\n  }\n\n  function popUpMessage() {\n    setSuccess(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-1\",\n    children: isRegistered && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-light m-3 p-lg-2 border-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-dark bg-light p-4 m-lg-2 my-3 border rounded border-info border-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Register to Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-inline justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mb-2\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                onChange: handleIDChange,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  autoComplete: \"off\",\n                  maxLength: 9,\n                  minLength: 9,\n                  className: \"form-control\",\n                  placeholder: \"National ID\",\n                  id: \"inputID\",\n                  value: idNational\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: isBtnDisabled,\n                  type: \"button\",\n                  className: \"btn btn-success\",\n                  onClick: popUpMessage,\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), success && /*#__PURE__*/_jsxDEV(Modal, {\n                  show: true,\n                  className: \"p-5\",\n                  children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                    className: \"badge badge-warning\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n                      children: \"User Authentication\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                    className: \"h2 p-5 m-2 text-center\",\n                    children: [\"Your ID will be verified and registered in few moments:\\xA0\", idNational]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn-success p-2 px-3 mx-3 my-2 rounded h3\",\n                      onClick: claimVotetToken,\n                      children: \"Close to continue\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-center d-flex justify-content-center \",\n            children: \"ID example format: AA000000A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 m-1 p-lg-3  mt-lg-5 bg-light border rounded border-info border-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h5\",\n            children: \"Your address:\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-testid\": \"accountAddress\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"text-dark\",\n              href: `${network.explorerAddress}/address/${address}`,\n              target: '_blank',\n              rel: \"noopener noreferrer\",\n              title: \"View in Explorer\",\n              children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                \"data-testid\": \"accountAddress\",\n                text: account.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterInfo, \"pGDwHqWyZrd7UQf0OfvbtrMXSvc=\", false, function () {\n  return [useGetAccountInfo, useGetNetworkConfig];\n});\n\n_c = RegisterInfo;\nexport default RegisterInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterInfo\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/RegisterID/index.tsx"],"names":["fs","path","dirname","fileURLToPath","React","useGetAccountInfo","DappUI","useGetNetworkConfig","transactionServices","refreshAccount","ProxyProvider","UserSigner","Account","Transaction","Address","Balance","GasLimit","NetworkConfig","Form","Modal","contractClaim","RegisterInfo","address","account","network","isRegistered","Boolean","PemFile","ProxyUrl","__dirname","import","meta","url","SendEgldFee","provider","apiAddress","signer","getSigner","accountSender","getAddress","getDefault","sync","tx","gasLimit","receiver","value","egld","setNonce","nonce","sign","send","pemWalletPath","relative","pemWalletContents","promises","readFile","encoding","fromPem","setTransactionSessionId","useState","sendTransactions","claimVotetToken","claimTransaction","data","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","twoInOneCall","idNational","setIdNational","String","isBtnDisabled","setIsBtnDisabled","success","setSuccess","useEffect","length","handleIDChange","e","target","popUpMessage","explorerAddress"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path, { dirname } from 'path';\nimport { fileURLToPath } from 'url';\nimport * as React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  useGetNetworkConfig,\n  transactionServices,\n  refreshAccount\n} from '@elrondnetwork/dapp-core';\nimport {\n  ProxyProvider,\n  UserSigner,\n  Account,\n  Transaction,\n  Address,\n  Balance,\n  GasLimit,\n  NetworkConfig\n} from '@elrondnetwork/erdjs';\nimport {\n  ApiNetworkProvider,\n  ProxyNetworkProvider\n} from '@elrondnetwork/erdjs-network-providers';\nimport BigNumber from 'bignumber.js';\nimport fetch from 'node-fetch';\nimport { Form, Modal } from 'react-bootstrap';\nimport { contractClaim } from 'config';\n\nconst RegisterInfo = () => {\n  const { address, account } = useGetAccountInfo();\n  const { network } = useGetNetworkConfig();\n  const isRegistered = Boolean(address);\n\n  //Egld Claim Faucet for blockchain transaction fee\n  const PemFile = 'wallet-owner.pem';\n  const ProxyUrl = 'https://devnet-gateway.elrond.com';\n  const __dirname = dirname(fileURLToPath(import.meta.url));\n\n  const SendEgldFee = async () => {\n    const provider = new ProxyProvider(network.apiAddress);\n    const signer = await getSigner();\n    const accountSender = new Account(signer.getAddress());\n\n    await NetworkConfig.getDefault().sync(provider);\n    await accountSender.sync(provider);\n\n    const tx = new Transaction({\n      gasLimit: new GasLimit(500000),\n      receiver: new Address(address),\n      value: Balance.egld(0.0006)\n    });\n\n    tx.setNonce(accountSender.nonce);\n    await signer.sign(tx);\n    await tx.send(provider);\n  };\n\n  const getSigner = async () => {\n    const pemWalletPath = path.relative(__dirname, PemFile);\n    const pemWalletContents = await fs.promises.readFile(pemWalletPath, {\n      encoding: 'utf8'\n    });\n    return UserSigner.fromPem(pemWalletContents);\n  };\n\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n  const { sendTransactions } = transactionServices;\n  const claimVotetToken = async () => {\n    const claimTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'claim',\n      receiver: contractClaim\n    };\n    await refreshAccount();\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: claimTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Claim Vote transaction',\n        errorMessage: 'An error has occured during Claim',\n        successMessage: 'Claim Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n    twoInOneCall();\n  };\n\n  //-- Registered button functionality part\n  const [idNational, setIdNational] = React.useState(null ? '' : String); //set Id input state\n  const [isBtnDisabled, setIsBtnDisabled] = React.useState(true);\n  const [success, setSuccess] = React.useState(false);\n\n  React.useEffect(() => {\n    if (idNational.length < 9) {\n      setIsBtnDisabled(true);\n    } else {\n      setIsBtnDisabled(false);\n    }\n  }, [idNational]);\n\n  function handleIDChange(e: React.ChangeEvent<any>) {\n    setIdNational(e.target.value);\n  }\n\n  function twoInOneCall() {\n    //await new Promise((resolve) => setTimeout(resolve, 3000));\n    setIdNational(() => '');\n    setSuccess(false);\n  }\n  function popUpMessage() {\n    setSuccess(true);\n  }\n\n  return (\n    <div className='container-fluid p-1'>\n      {isRegistered && (\n        <div className='card bg-light m-3 p-lg-2 border-0'>\n          <div className='text-dark bg-light p-4 m-lg-2 my-3 border rounded border-info border-1'>\n            <div className='mb-3'>\n              <h1 className='text-center'>Register to Vote</h1>\n            </div>\n            <div className='my-4'>\n              <form className='form-inline justify-content-center'>\n                <div className='form-group mb-2'>\n                  <Form.Group onChange={handleIDChange}>\n                    <input\n                      type='text'\n                      autoComplete='off'\n                      maxLength={9}\n                      minLength={9}\n                      className='form-control'\n                      placeholder='National ID'\n                      id='inputID'\n                      value={idNational}\n                    ></input>\n                    <button\n                      disabled={isBtnDisabled}\n                      type='button'\n                      className='btn btn-success'\n                      onClick={popUpMessage}\n                    >\n                      Register\n                    </button>\n                    {success && (\n                      <Modal show={true} className='p-5'>\n                        <Modal.Header className='badge badge-warning'>\n                          <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                            User Authentication\n                          </div>\n                        </Modal.Header>\n                        <Modal.Body className='h2 p-5 m-2 text-center'>\n                          Your ID will be verified and registered in few\n                          moments:&nbsp;{idNational}\n                        </Modal.Body>\n                        <Modal.Footer>\n                          <button\n                            className='btn-success p-2 px-3 mx-3 my-2 rounded h3'\n                            onClick={claimVotetToken}\n                          >\n                            Close to continue\n                          </button>\n                        </Modal.Footer>\n                      </Modal>\n                    )}\n                  </Form.Group>\n                </div>\n              </form>\n              <span className='text-center d-flex justify-content-center '>\n                ID example format: AA000000A\n              </span>\n            </div>\n            <div className='p-2 m-1 p-lg-3  mt-lg-5 bg-light border rounded border-info border-1'>\n              <span className='h5'>Your address:&nbsp;</span>\n              <span data-testid='accountAddress'>\n                <a\n                  className='text-dark'\n                  href={`${network.explorerAddress}/address/${address}`}\n                  {...{\n                    target: '_blank'\n                  }}\n                  rel='noopener noreferrer'\n                  title='View in Explorer'\n                >\n                  <DappUI.Trim\n                    data-testid='accountAddress'\n                    text={account.address}\n                  />\n                </a>\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegisterInfo;\n"]},"metadata":{},"sourceType":"module"}