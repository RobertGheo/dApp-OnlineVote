{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexRed.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { transactionServices, useGetAccountInfo, useGetPendingTransactions, refreshAccount, useGetNetworkConfig, logout } from '@elrondnetwork/dapp-core';\nimport { Address, AddressValue, ContractFunction, GasLimit, ProxyProvider, Query } from '@elrondnetwork/erdjs';\nimport { Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { contractAddressHex1 } from 'config';\nimport { routeNames } from 'routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ActionsRed = () => {\n  _s();\n\n  const account = useGetAccountInfo();\n  const {\n    hasPendingTransactions\n  } = useGetPendingTransactions();\n  const {\n    network\n  } = useGetNetworkConfig();\n  const {\n    address\n  } = account;\n\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n\n  const [secondsLeft, setSecondsLeft] = React.useState();\n  const [hasPing, setHasPing] = React.useState();\n  const\n  /*transactionSessionId*/\n  [, setTransactionSessionId] = React.useState(null);\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex1),\n      func: new ContractFunction('getTimeToPong'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy.queryContract(query).then(_ref => {\n      let {\n        returnData\n      } = _ref;\n      const [encoded] = returnData;\n\n      switch (encoded) {\n        case undefined:\n          setHasPing(true);\n          break;\n\n        case '':\n          setSecondsLeft(0);\n          setHasPing(false);\n          break;\n\n        default:\n          {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setSecondsLeft(parseInt(decoded, 16));\n            setHasPing(false);\n            break;\n          }\n      }\n    }).catch(err => {\n      console.error('Unable to call VM query', err);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasPendingTransactions]);\n  const {\n    sendTransactions\n  } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'ESDTTransfer@564f5445554b323032342d656363306463@01@766f74656c61626f7572',\n      receiver: contractAddressHex1\n    };\n    await refreshAccount();\n    const {\n      sessionId\n      /*, error*/\n\n    } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Vote transaction',\n        errorMessage: 'An error has occured during Vote',\n        successMessage: 'Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex col justify-content-center not-allowed disabled\",\n    children: hasPing !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: hasPing && !hasPendingTransactions ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card row w-100 border-danger shadow mx-auto\",\n          onClick: sendPingTransaction,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger m-2\",\n            children: \"Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            className: \"text-dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex col justify-content-center not-allowed disabled\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card row w-100 border-danger shadow mx-auto not-allowed disabled\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger m-2  not-allowed disabled\",\n              children: \"Voted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), !hasPing && /*#__PURE__*/_jsxDEV(Modal, {\n              show: true,\n              className: \"p-5\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                className: \"badge badge-danger\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n                  children: \"Labour Party Ballot Box\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                className: \"h2 p-5 m-2 text-center\",\n                children: \"Your vote has successfully been recorded.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: routeNames.votedSuccessful,\n                  className: \"btn-success p-2 px-3 mx-3 my-2 rounded h3\",\n                  onClick: handleLogout,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionsRed, \"5itpVADhOmEYoHzzg1V70bFWIBI=\", false, function () {\n  return [useGetAccountInfo, useGetPendingTransactions, useGetNetworkConfig];\n});\n\n_c = ActionsRed;\nexport default ActionsRed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionsRed\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexRed.tsx"],"names":["React","transactionServices","useGetAccountInfo","useGetPendingTransactions","refreshAccount","useGetNetworkConfig","logout","Address","AddressValue","ContractFunction","GasLimit","ProxyProvider","Query","Modal","Link","contractAddressHex1","routeNames","ActionsRed","account","hasPendingTransactions","network","address","handleLogout","window","location","origin","votedSuccessful","secondsLeft","setSecondsLeft","useState","hasPing","setHasPing","setTransactionSessionId","useEffect","query","func","args","proxy","apiAddress","queryContract","then","returnData","encoded","undefined","decoded","Buffer","from","toString","parseInt","catch","err","console","error","sendTransactions","sendPingTransaction","pingTransaction","value","gasLimit","data","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  transactionServices,\n  useGetAccountInfo,\n  useGetPendingTransactions,\n  refreshAccount,\n  useGetNetworkConfig,\n  logout\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  GasLimit,\n  ProxyProvider,\n  Query\n} from '@elrondnetwork/erdjs';\nimport { Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { contractAddressHex1 } from 'config';\nimport { routeNames } from 'routes';\n\nconst ActionsRed = () => {\n  const account = useGetAccountInfo();\n  const { hasPendingTransactions } = useGetPendingTransactions();\n  const { network } = useGetNetworkConfig();\n  const { address } = account;\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n\n  const [secondsLeft, setSecondsLeft] = React.useState<number>();\n  const [hasPing, setHasPing] = React.useState<boolean>();\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex1),\n      func: new ContractFunction('getTimeToPong'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          case undefined:\n            setHasPing(true);\n            break;\n          case '':\n            setSecondsLeft(0);\n            setHasPing(false);\n            break;\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setSecondsLeft(parseInt(decoded, 16));\n            setHasPing(false);\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasPendingTransactions]);\n\n  const { sendTransactions } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'ESDTTransfer@564f5445554b323032342d656363306463@01@766f74656c61626f7572',\n      receiver: contractAddressHex1\n    };\n\n    await refreshAccount();\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Vote transaction',\n        errorMessage: 'An error has occured during Vote',\n        successMessage: 'Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  return (\n    <div className='d-flex col justify-content-center not-allowed disabled'>\n      {hasPing !== undefined && (\n        <>\n          {hasPing && !hasPendingTransactions ? (\n            <>\n              <div\n                className='card row w-100 border-danger shadow mx-auto'\n                onClick={sendPingTransaction}\n              >\n                <button type='button' className='btn btn-danger m-2'>\n                  Vote\n                </button>\n                <a href='/' className='text-dark'></a>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className='d-flex col justify-content-center not-allowed disabled'>\n                <div className='card row w-100 border-danger shadow mx-auto not-allowed disabled'>\n                  <button className='btn btn-danger m-2  not-allowed disabled'>\n                    Voted\n                  </button>\n                  {!hasPing && (\n                    <Modal show={true} className='p-5'>\n                      <Modal.Header className='badge badge-danger'>\n                        <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                          Labour Party Ballot Box\n                        </div>\n                      </Modal.Header>\n                      <Modal.Body className='h2 p-5 m-2 text-center'>\n                        Your vote has successfully been recorded.\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Link\n                          to={routeNames.votedSuccessful}\n                          className='btn-success p-2 px-3 mx-3 my-2 rounded h3'\n                          onClick={handleLogout}\n                        >\n                          Close\n                        </Link>\n                      </Modal.Footer>\n                    </Modal>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ActionsRed;\n"]},"metadata":{},"sourceType":"module"}