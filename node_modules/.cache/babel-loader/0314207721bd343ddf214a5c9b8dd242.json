{"ast":null,"code":"//import { fs } from 'fs';\nimport * as React from 'react';\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core'; //import { core, ElrondProxy } from '@elrondnetwork/elrond-core-js';\n\nimport { sendWallet } from 'config';\nimport './myWallet.json';\nimport './passMyWallet';\nimport { ProxyProvider } from '@elrondnetwork/erdjs/out'; // eslint-disable-next-line @typescript-eslint/no-var-requires\n\nconst fs = require('fs'); // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\nconst core = require('@elrondnetwork/elrond-core-js');\n\nlet keyFileJson = fs.readFileSync('myWallet.json', {\n  encoding: 'utf8'\n}).trim();\nlet keyFileObject = JSON.parse(keyFileJson);\nlet accountSend = new core.accountSend();\naccountSend.loadFromKeyFile(keyFileObject, 'passMyWallet');\nlet transaction = new core.transaction(12, 'erd16wwuy5kk46auwuawurempkkvh0kjrkys30fjjlxp5ht6nj4uxl2sknxpmg', 'erd16wwuy5kk46auwuawurempkkvh0kjrkys30fjjlxp5ht6nj4uxl2sknxpmg', '10000000000000000', 1000000000, 70000, 'ESDTTransfer', 'D', 1);\nlet serializedTransaction = transaction.prepareForSigning();\ntransaction.signature = accountSend.sign(serializedTransaction);\nlet signedTransaction = transaction.prepareForNode();\nlet signedTransactionJson = JSON.stringify(signedTransaction, null, 4);\nsignedTransactionJson(ElrondProxy);","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/SendToken.js"],"names":["React","useGetAccountInfo","DappUI","sendWallet","ProxyProvider","fs","require","core","keyFileJson","readFileSync","encoding","trim","keyFileObject","JSON","parse","accountSend","loadFromKeyFile","transaction","serializedTransaction","prepareForSigning","signature","sign","signedTransaction","prepareForNode","signedTransactionJson","stringify","ElrondProxy"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,EAA4BC,MAA5B,QAA0C,0BAA1C,C,CACA;;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAO,iBAAP;AACA,OAAO,gBAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B,C,CAEA;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB,C,CACA;;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,+BAAD,CAApB;;AACA,IAAIE,WAAW,GAAGH,EAAE,CAACI,YAAH,CAAgB,eAAhB,EAAiC;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAjC,EAAuDC,IAAvD,EAAlB;AACA,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWN,WAAX,CAApB;AAEA,IAAIO,WAAW,GAAG,IAAIR,IAAI,CAACQ,WAAT,EAAlB;AACAA,WAAW,CAACC,eAAZ,CAA4BJ,aAA5B,EAA2C,cAA3C;AAEA,IAAIK,WAAW,GAAG,IAAIV,IAAI,CAACU,WAAT,CAChB,EADgB,EAEhB,gEAFgB,EAGhB,gEAHgB,EAIhB,mBAJgB,EAKhB,UALgB,EAMhB,KANgB,EAOhB,cAPgB,EAQhB,GARgB,EAShB,CATgB,CAAlB;AAYA,IAAIC,qBAAqB,GAAGD,WAAW,CAACE,iBAAZ,EAA5B;AACAF,WAAW,CAACG,SAAZ,GAAwBL,WAAW,CAACM,IAAZ,CAAiBH,qBAAjB,CAAxB;AACA,IAAII,iBAAiB,GAAGL,WAAW,CAACM,cAAZ,EAAxB;AACA,IAAIC,qBAAqB,GAAGX,IAAI,CAACY,SAAL,CAAeH,iBAAf,EAAkC,IAAlC,EAAwC,CAAxC,CAA5B;AACAE,qBAAqB,CAACE,WAAD,CAArB","sourcesContent":["//import { fs } from 'fs';\nimport * as React from 'react';\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\n//import { core, ElrondProxy } from '@elrondnetwork/elrond-core-js';\nimport { sendWallet } from 'config';\nimport './myWallet.json';\nimport './passMyWallet';\nimport { ProxyProvider } from '@elrondnetwork/erdjs/out';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst fs = require('fs');\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst core = require('@elrondnetwork/elrond-core-js');\nlet keyFileJson = fs.readFileSync('myWallet.json', { encoding: 'utf8' }).trim();\nlet keyFileObject = JSON.parse(keyFileJson);\n\nlet accountSend = new core.accountSend();\naccountSend.loadFromKeyFile(keyFileObject, 'passMyWallet');\n\nlet transaction = new core.transaction(\n  12,\n  'erd16wwuy5kk46auwuawurempkkvh0kjrkys30fjjlxp5ht6nj4uxl2sknxpmg',\n  'erd16wwuy5kk46auwuawurempkkvh0kjrkys30fjjlxp5ht6nj4uxl2sknxpmg',\n  '10000000000000000',\n  1000000000,\n  70000,\n  'ESDTTransfer',\n  'D',\n  1\n);\n\nlet serializedTransaction = transaction.prepareForSigning();\ntransaction.signature = accountSend.sign(serializedTransaction);\nlet signedTransaction = transaction.prepareForNode();\nlet signedTransactionJson = JSON.stringify(signedTransaction, null, 4);\nsignedTransactionJson(ElrondProxy);\n"]},"metadata":{},"sourceType":"module"}