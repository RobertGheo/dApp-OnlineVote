{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/ClaimedToken/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useGetAccountInfo, DappUI, useGetNetworkConfig, refreshAccount } from '@elrondnetwork/dapp-core';\nimport { Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClaimedToken = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const {\n    network\n  } = useGetNetworkConfig();\n  const [successS, setSuccess] = React.useState(false); //setSuccess(true);\n\n  function popUpMessage() {\n    //await new Promise((resolve) => setTimeout(resolve, 3000));\n    refreshAccount();\n    setSuccess(false);\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card bg-light m-3 p-lg-2 border-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-dark bg-warning p-4 m-lg-2 my-3 rounded border border-secondary border-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center font-weight-bold pb-4\",\n          children: \"You registered but you did not vote!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card col-md-12 col-lg-8 my-4 mx-lg-3 p-2 bg-warning border-secondary boreder-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"h4 font-weight-bold\",\n              children: \"Your address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              \"data-testid\": \"accountAddress\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"text-dark h5\",\n                href: `${network.explorerAddress}/address/${address}`,\n                target: '_blank',\n                rel: \"noopener noreferrer\",\n                title: \"View in Explorer\",\n                children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                  \"data-testid\": \"accountAddress\",\n                  text: address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mx-lg-4 col-md-1 col-lg-4 col-xl-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success p-1 p-lg-3 m-1 m-lg-4\",\n              onClick: popUpMessage,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h3 pt-1 text-center\",\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 mx-2 text-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h5 opacity-6\",\n            children: \"Your National ID:\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"h5 opacity-6 font-weight-bold\",\n            \"data-testid\": \"\",\n            children: \"AA000000A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), successS && /*#__PURE__*/_jsxDEV(Modal, {\n        show: true,\n        className: \"p-5\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          className: \"badge badge-warning\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n            children: \"Confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"h2 p-5 m-2 text-center\",\n          children: \"You are successfully registered:\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-success p-2 px-3 mx-3 my-2 rounded h3\",\n            onClick: popUpMessage,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClaimedToken, \"/cPzHuAvmO6pr17+EqlreXtWJm0=\", false, function () {\n  return [useGetAccountInfo, useGetNetworkConfig];\n});\n\n_c = ClaimedToken;\nexport default ClaimedToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimedToken\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/ClaimedToken/index.tsx"],"names":["React","useGetAccountInfo","DappUI","useGetNetworkConfig","refreshAccount","Modal","ClaimedToken","address","network","successS","setSuccess","useState","popUpMessage","window","location","reload","explorerAddress","target"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  useGetNetworkConfig,\n  refreshAccount\n} from '@elrondnetwork/dapp-core';\nimport { Modal } from 'react-bootstrap';\n\nconst ClaimedToken = () => {\n  const { address } = useGetAccountInfo();\n  const { network } = useGetNetworkConfig();\n  const [successS, setSuccess] = React.useState(false);\n  //setSuccess(true);\n  function popUpMessage() {\n    //await new Promise((resolve) => setTimeout(resolve, 3000));\n    refreshAccount();\n    setSuccess(false);\n    window.location.reload();\n  }\n\n  return (\n    <div className='container-fluid p-1'>\n      <div className='card bg-light m-3 p-lg-2 border-0'>\n        <div className='text-dark bg-warning p-4 m-lg-2 my-3 rounded border border-secondary border-1'>\n          <h1 className='text-center font-weight-bold pb-4'>\n            You registered but you did not vote!\n          </h1>\n          <div className='row'>\n            <div className='card col-md-12 col-lg-8 my-4 mx-lg-3 p-2 bg-warning border-secondary boreder-1'>\n              <span className='h4 font-weight-bold'>Your address:</span>\n              <span data-testid='accountAddress'>\n                <a\n                  className='text-dark h5'\n                  href={`${network.explorerAddress}/address/${address}`}\n                  {...{\n                    target: '_blank'\n                  }}\n                  rel='noopener noreferrer'\n                  title='View in Explorer'\n                >\n                  <DappUI.Trim data-testid='accountAddress' text={address} />\n                </a>\n              </span>\n            </div>\n            <div className='card mx-lg-4 col-md-1 col-lg-4 col-xl-3'>\n              <button\n                className='btn btn-success p-1 p-lg-3 m-1 m-lg-4'\n                onClick={popUpMessage}\n              >\n                <p className='h3 pt-1 text-center'>Refresh</p>\n              </button>\n            </div>\n          </div>\n          <div className='mb-2 mx-2 text-dark'>\n            <span className='h5 opacity-6'>Your National ID:&nbsp;</span>\n            <span className='h5 opacity-6 font-weight-bold' data-testid=''>\n              AA000000A\n            </span>\n          </div>\n        </div>\n        {successS && (\n          <Modal show={true} className='p-5'>\n            <Modal.Header className='badge badge-warning'>\n              <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                Confirmation\n              </div>\n            </Modal.Header>\n            <Modal.Body className='h2 p-5 m-2 text-center'>\n              You are successfully registered:&nbsp;\n            </Modal.Body>\n            <Modal.Footer>\n              <button\n                className='btn-success p-2 px-3 mx-3 my-2 rounded h3'\n                onClick={popUpMessage}\n              >\n                Close\n              </button>\n            </Modal.Footer>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ClaimedToken;\n"]},"metadata":{},"sourceType":"module"}