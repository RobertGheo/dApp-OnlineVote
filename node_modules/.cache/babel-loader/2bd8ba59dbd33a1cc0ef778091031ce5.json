{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayVecBinaryCodec = void 0;\n\nconst typesystem_1 = require(\"../typesystem\");\n\nclass ArrayVecBinaryCodec {\n  constructor(binaryCodec) {\n    this.binaryCodec = binaryCodec;\n  }\n\n  decodeNested(buffer, type) {\n    let arrayLength = type.length;\n    let typeParameter = type.getFirstTypeParameter();\n    let result = [];\n    let totalLength = 0;\n\n    for (let i = 0; i < arrayLength; i++) {\n      let [decoded, decodedLength] = this.binaryCodec.decodeNested(buffer, typeParameter);\n      result.push(decoded);\n      totalLength += decodedLength;\n      buffer = buffer.slice(decodedLength);\n    }\n\n    return [new typesystem_1.ArrayVec(type, result), totalLength];\n  }\n\n  decodeTopLevel(buffer, type) {\n    let [result, _] = this.decodeNested(buffer, type);\n    return result;\n  }\n\n  encodeNested(array) {\n    let itemsBuffers = [];\n\n    for (const item of array.getItems()) {\n      let itemBuffer = this.binaryCodec.encodeNested(item);\n      itemsBuffers.push(itemBuffer);\n    }\n\n    return Buffer.concat(itemsBuffers);\n  }\n\n  encodeTopLevel(array) {\n    return this.encodeNested(array);\n  }\n\n}\n\nexports.ArrayVecBinaryCodec = ArrayVecBinaryCodec;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA,MAAaA,mBAAb,CAAgC;AAG5BC,cAAYC,WAAZ,EAAoC;AAChC,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAEDC,cAAY,CAACC,MAAD,EAAiBC,IAAjB,EAAmC;AAC3C,QAAIC,WAAW,GAAGD,IAAI,CAACE,MAAvB;AACA,QAAIC,aAAa,GAAGH,IAAI,CAACI,qBAAL,EAApB;AACA,QAAIC,MAAM,GAAiB,EAA3B;AACA,QAAIC,WAAW,GAAG,CAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,WAApB,EAAiCM,CAAC,EAAlC,EAAsC;AAClC,UAAI,CAACC,OAAD,EAAUC,aAAV,IAA2B,KAAKZ,WAAL,CAAiBC,YAAjB,CAA8BC,MAA9B,EAAsCI,aAAtC,CAA/B;AACAE,YAAM,CAACK,IAAP,CAAYF,OAAZ;AACAF,iBAAW,IAAIG,aAAf;AACAV,YAAM,GAAGA,MAAM,CAACY,KAAP,CAAaF,aAAb,CAAT;AACH;;AAED,WAAO,CAAC,IAAIG,qBAAJ,CAAaZ,IAAb,EAAmBK,MAAnB,CAAD,EAA6BC,WAA7B,CAAP;AACH;;AAEDO,gBAAc,CAACd,MAAD,EAAiBC,IAAjB,EAAmC;AAC7C,QAAI,CAACK,MAAD,EAASS,CAAT,IAAc,KAAKhB,YAAL,CAAkBC,MAAlB,EAA0BC,IAA1B,CAAlB;AACA,WAAOK,MAAP;AACH;;AAEDU,cAAY,CAACC,KAAD,EAAgB;AACxB,QAAIC,YAAY,GAAa,EAA7B;;AAEA,SAAK,MAAMC,IAAX,IAAmBF,KAAK,CAACG,QAAN,EAAnB,EAAqC;AACjC,UAAIC,UAAU,GAAG,KAAKvB,WAAL,CAAiBkB,YAAjB,CAA8BG,IAA9B,CAAjB;AACAD,kBAAY,CAACP,IAAb,CAAkBU,UAAlB;AACH;;AAED,WAAOC,MAAM,CAACC,MAAP,CAAcL,YAAd,CAAP;AACH;;AAEDM,gBAAc,CAACP,KAAD,EAAgB;AAC1B,WAAO,KAAKD,YAAL,CAAkBC,KAAlB,CAAP;AACH;;AAzC2B;;AAAhCQ","names":["ArrayVecBinaryCodec","constructor","binaryCodec","decodeNested","buffer","type","arrayLength","length","typeParameter","getFirstTypeParameter","result","totalLength","i","decoded","decodedLength","push","slice","typesystem_1","decodeTopLevel","_","encodeNested","array","itemsBuffers","item","getItems","itemBuffer","Buffer","concat","encodeTopLevel","exports"],"sourceRoot":"","sources":["../../../src/smartcontracts/codec/arrayVec.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}