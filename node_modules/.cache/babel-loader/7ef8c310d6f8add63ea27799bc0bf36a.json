{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/RegisterID/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useGetAccountInfo, DappUI, useGetNetworkConfig, transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport { Form, Modal } from 'react-bootstrap'; //import { ClaimEgldFaucet } from 'claimxegdl';\n\nimport { contractClaim } from 'config'; //\n\nimport { ProxyProvider, UserSigner, Account, Transaction, Address, Balance, GasLimit, NetworkConfig } from '@elrondnetwork/erdjs';\nimport fs from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterInfo = () => {\n  _s();\n\n  const {\n    address,\n    account\n  } = useGetAccountInfo();\n  const {\n    network\n  } = useGetNetworkConfig();\n  const isRegistered = Boolean(address); // const sendxEgld = ClaimEgldFaucet();\n\n  const\n  /*transactionSessionId*/\n  [, setTransactionSessionId] = React.useState(null);\n  const {\n    sendTransactions\n  } = transactionServices;\n\n  const claimVotetToken = async () => {\n    const claimTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'claim',\n      receiver: contractClaim\n    };\n    await refreshAccount();\n    const {\n      sessionId\n      /*, error*/\n\n    } = await sendTransactions({\n      transactions: claimTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Claim Vote transaction',\n        errorMessage: 'An error has occured during Claim',\n        successMessage: 'Claim Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n\n    twoInOneCall();\n  }; //-- Registered button functionality part\n\n\n  const [idNational, setIdNational] = React.useState(null ? '' : String); //set Id input state\n\n  const [isBtnDisabled, setIsBtnDisabled] = React.useState(true);\n  const [success, setSuccess] = React.useState(false);\n  React.useEffect(() => {\n    if (idNational.length < 9) {\n      setIsBtnDisabled(true);\n    } else {\n      setIsBtnDisabled(false);\n    }\n  }, [idNational]);\n\n  function handleIDChange(e) {\n    setIdNational(e.target.value);\n  }\n\n  function twoInOneCall() {\n    //await new Promise((resolve) => setTimeout(resolve, 3000));\n    setIdNational(() => '');\n    setSuccess(false);\n    ClaimEgldFaucet();\n  }\n\n  function popUpMessage() {\n    setSuccess(true);\n  } //Egld Claim Faucet for blockchain transaction fee\n\n\n  const PemFile = 'wallet-owner.pem';\n  const ProxyUrl = 'https://devnet-gateway.elrond.com';\n  const ApiUrl = 'https://devnet-api.elrond.com'; //const urlweb = 'https://devnet-wallet.elrond.com/unlock/pem';\n  //const __dirname = dirname(url());\n\n  const ClaimEgldFaucet = async () => {\n    const provider = new ProxyProvider(ProxyUrl);\n    const signer = await getSigner();\n    const accountSender = new Account(signer.getAddress());\n    console.log(`login ${address}`);\n    console.log(`who is sending ${signer}`);\n    await NetworkConfig.getDefault().sync(provider);\n    await accountSender.sync(provider);\n    const tx = await buildRewardTransactionFor(address);\n    tx.setNonce(accountSender.nonce);\n    await signer.sign(tx);\n    console.log(`name of wallet ${accountSender}`);\n    console.log(`proxy name ${provider}`);\n    await tx.send(provider);\n  };\n\n  const getSigner = async () => {\n    //const pemWalletPath = path.basename(PemFile);\n    const pemWalletContents = fs.readFileSync(PemFile, {\n      encoding: 'utf8'\n    });\n    return UserSigner.fromPem(pemWalletContents);\n  };\n\n  const buildRewardTransactionFor = async receiverAddress => new Transaction({\n    gasLimit: new GasLimit(500000),\n    receiver: new Address(receiverAddress),\n    value: Balance.egld(0.0006)\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-1\",\n    children: isRegistered && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-light m-3 p-lg-2 border-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-dark bg-light p-4 m-lg-2 my-3 border rounded border-info border-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center font-weight-bold\",\n              children: \"Register to Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form-inline justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  onChange: handleIDChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    autoComplete: \"off\",\n                    maxLength: 9,\n                    minLength: 9,\n                    className: \"form-control\",\n                    placeholder: \"National ID\",\n                    id: \"inputID\",\n                    value: idNational\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: isBtnDisabled,\n                    type: \"button\",\n                    className: \"btn btn-success\",\n                    onClick: popUpMessage,\n                    children: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), success && /*#__PURE__*/_jsxDEV(Modal, {\n                    show: true,\n                    className: \"p-5\",\n                    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                      className: \"badge badge-warning\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n                        children: \"User Authentication\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                      className: \"h2 p-5 m-2 text-center\",\n                      children: [\"Your ID will be verified and registered in few moments:\\xA0\", idNational]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn-success p-2 px-3 mx-3 my-2 rounded h3\",\n                        onClick: twoInOneCall,\n                        children: \"Close to continue\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-center d-flex justify-content-center \",\n              children: \"ID example format: AA000000A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 m-1 p-lg-3 mt-lg-5 bg-light border rounded border-info border-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"h5\",\n              children: \"Your address:\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              \"data-testid\": \"accountAddress\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"text-dark\",\n                href: `${network.explorerAddress}/address/${address}`,\n                target: '_blank',\n                rel: \"noopener noreferrer\",\n                title: \"View in Explorer\",\n                children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                  \"data-testid\": \"accountAddress\",\n                  text: account.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body bg-light m-3 p-lg-2 border-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-light bg-info p-4 m-lg-2 my-3 border rounded border-info border-1\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h3\",\n            children: \"For claiming your right to vote you need to have a small amount of xEgld to cover the transaction fee when interacting with the smart contracts ballot boxs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterInfo, \"pGDwHqWyZrd7UQf0OfvbtrMXSvc=\", false, function () {\n  return [useGetAccountInfo, useGetNetworkConfig];\n});\n\n_c = RegisterInfo;\nexport default RegisterInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterInfo\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/RegisterID/index.tsx"],"names":["React","useGetAccountInfo","DappUI","useGetNetworkConfig","transactionServices","refreshAccount","Form","Modal","contractClaim","ProxyProvider","UserSigner","Account","Transaction","Address","Balance","GasLimit","NetworkConfig","fs","RegisterInfo","address","account","network","isRegistered","Boolean","setTransactionSessionId","useState","sendTransactions","claimVotetToken","claimTransaction","value","gasLimit","data","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","twoInOneCall","idNational","setIdNational","String","isBtnDisabled","setIsBtnDisabled","success","setSuccess","useEffect","length","handleIDChange","e","target","ClaimEgldFaucet","popUpMessage","PemFile","ProxyUrl","ApiUrl","provider","signer","getSigner","accountSender","getAddress","console","log","getDefault","sync","tx","buildRewardTransactionFor","setNonce","nonce","sign","send","pemWalletContents","readFileSync","encoding","fromPem","receiverAddress","egld","explorerAddress"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  useGetNetworkConfig,\n  transactionServices,\n  refreshAccount\n} from '@elrondnetwork/dapp-core';\nimport { Form, Modal } from 'react-bootstrap';\n//import { ClaimEgldFaucet } from 'claimxegdl';\nimport { contractClaim } from 'config';\n//\nimport {\n  ProxyProvider,\n  UserSigner,\n  Account,\n  Transaction,\n  Address,\n  Balance,\n  TransactionPayload,\n  GasLimit,\n  NetworkConfig,\n  ContractFunction,\n  BigUIntValue,\n  BytesValue,\n  Egld\n} from '@elrondnetwork/erdjs';\n\nimport fs from 'fs';\n\n\nconst RegisterInfo = () => {\n  const { address, account } = useGetAccountInfo();\n  const { network } = useGetNetworkConfig();\n  const isRegistered = Boolean(address);\n\n  // const sendxEgld = ClaimEgldFaucet();\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n  const { sendTransactions } = transactionServices;\n  const claimVotetToken = async () => {\n    const claimTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'claim',\n      receiver: contractClaim\n    };\n    await refreshAccount();\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: claimTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Claim Vote transaction',\n        errorMessage: 'An error has occured during Claim',\n        successMessage: 'Claim Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n    twoInOneCall();\n  };\n\n  //-- Registered button functionality part\n  const [idNational, setIdNational] = React.useState(null ? '' : String); //set Id input state\n  const [isBtnDisabled, setIsBtnDisabled] = React.useState(true);\n  const [success, setSuccess] = React.useState(false);\n\n  React.useEffect(() => {\n    if (idNational.length < 9) {\n      setIsBtnDisabled(true);\n    } else {\n      setIsBtnDisabled(false);\n    }\n  }, [idNational]);\n\n  function handleIDChange(e: React.ChangeEvent<any>) {\n    setIdNational(e.target.value);\n  }\n\n  function twoInOneCall() {\n    //await new Promise((resolve) => setTimeout(resolve, 3000));\n    setIdNational(() => '');\n    setSuccess(false);\n    ClaimEgldFaucet();\n  }\n  function popUpMessage() {\n    setSuccess(true);\n  }\n\n  //Egld Claim Faucet for blockchain transaction fee\n  const PemFile = 'wallet-owner.pem';\n  const ProxyUrl = 'https://devnet-gateway.elrond.com';\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  //const urlweb = 'https://devnet-wallet.elrond.com/unlock/pem';\n\n  //const __dirname = dirname(url());\n  const ClaimEgldFaucet = async () => {\n    const provider = new ProxyProvider(ProxyUrl);\n    const signer = await getSigner();\n    const accountSender = new Account(signer.getAddress());\n    console.log(`login ${address}`);\n\n    console.log(`who is sending ${signer}`);\n    await NetworkConfig.getDefault().sync(provider);\n    await accountSender.sync(provider);\n\n    const tx = await buildRewardTransactionFor(address);\n    tx.setNonce(accountSender.nonce);\n    await signer.sign(tx);\n    console.log(`name of wallet ${accountSender}`);\n    console.log(`proxy name ${provider}`);\n\n    await tx.send(provider);\n  };\n\n  const getSigner = async () => {\n    //const pemWalletPath = path.basename(PemFile);\n    const pemWalletContents = fs.readFileSync(PemFile, {\n      encoding: 'utf8'\n    });\n    return UserSigner.fromPem(pemWalletContents);\n  };\n\n  const buildRewardTransactionFor = async (receiverAddress: string) =>\n    new Transaction({\n      gasLimit: new GasLimit(500000),\n      receiver: new Address(receiverAddress),\n      value: Balance.egld(0.0006)\n    });\n\n  return (\n    <div className='container-fluid p-1'>\n      {isRegistered && (\n        <>\n          <div className='card-header bg-light m-3 p-lg-2 border-0'>\n            <div className='text-dark bg-light p-4 m-lg-2 my-3 border rounded border-info border-1'>\n              <div className='mb-3'>\n                <h1 className='text-center font-weight-bold'>\n                  Register to Vote\n                </h1>\n              </div>\n              <div className='my-4'>\n                <form className='form-inline justify-content-center'>\n                  <div className='form-group mb-2'>\n                    <Form.Group onChange={handleIDChange}>\n                      <input\n                        type='text'\n                        autoComplete='off'\n                        maxLength={9}\n                        minLength={9}\n                        className='form-control'\n                        placeholder='National ID'\n                        id='inputID'\n                        value={idNational}\n                      ></input>\n                      <button\n                        disabled={isBtnDisabled}\n                        type='button'\n                        className='btn btn-success'\n                        onClick={popUpMessage}\n                      >\n                        Register\n                      </button>\n                      {success && (\n                        <Modal show={true} className='p-5'>\n                          <Modal.Header className='badge badge-warning'>\n                            <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                              User Authentication\n                            </div>\n                          </Modal.Header>\n                          <Modal.Body className='h2 p-5 m-2 text-center'>\n                            Your ID will be verified and registered in few\n                            moments:&nbsp;{idNational}\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <button\n                              className='btn-success p-2 px-3 mx-3 my-2 rounded h3'\n                              onClick={twoInOneCall}\n                            >\n                              Close to continue\n                            </button>\n                          </Modal.Footer>\n                        </Modal>\n                      )}\n                    </Form.Group>\n                  </div>\n                </form>\n                <span className='text-center d-flex justify-content-center '>\n                  ID example format: AA000000A\n                </span>\n              </div>\n              <div className='p-2 m-1 p-lg-3 mt-lg-5 bg-light border rounded border-info border-1'>\n                <span className='h5'>Your address:&nbsp;</span>\n                <span data-testid='accountAddress'>\n                  <a\n                    className='text-dark'\n                    href={`${network.explorerAddress}/address/${address}`}\n                    {...{\n                      target: '_blank'\n                    }}\n                    rel='noopener noreferrer'\n                    title='View in Explorer'\n                  >\n                    <DappUI.Trim\n                      data-testid='accountAddress'\n                      text={account.address}\n                    />\n                  </a>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className='card-body bg-light m-3 p-lg-2 border-0'>\n            <div className='text-light bg-info p-4 m-lg-2 my-3 border rounded border-info border-1'>\n              <p className='h3'>\n                For claiming your right to vote you need to have a small amount\n                of xEgld to cover the transaction fee when interacting with the\n                smart contracts ballot boxs.\n              </p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RegisterInfo;\n"]},"metadata":{},"sourceType":"module"}