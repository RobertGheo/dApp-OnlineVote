{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Nonce = void 0;\n\nconst errors = __importStar(require(\"./errors\"));\n/**\n * The nonce, as an immutable object.\n */\n\n\nclass Nonce {\n  /**\n   * Creates a Nonce object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (Number.isNaN(value) || value < 0) {\n      throw new errors.ErrNonceInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a new Nonce object by incrementing the current one.\n   */\n\n\n  increment() {\n    return new Nonce(this.value + 1);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n  equals(other) {\n    if (!other) {\n      return false;\n    }\n\n    return this.value === other.value;\n  }\n\n}\n\nexports.Nonce = Nonce;","map":{"version":3,"sources":["../src/nonce.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;AAEA;;AAEG;;;AACH,MAAa,KAAb,CAAkB;AAMd;;AAEG;AACH,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;;AAEA,QAAI,MAAM,CAAC,KAAP,CAAa,KAAb,KAAuB,KAAK,GAAG,CAAnC,EAAsC;AAClC,YAAM,IAAI,MAAM,CAAC,eAAX,CAA2B,KAA3B,CAAN;AACH;;AAED,SAAK,KAAL,GAAa,KAAb;AACH;AAED;;AAEG;;;AACH,EAAA,SAAS,GAAA;AACL,WAAO,IAAI,KAAJ,CAAU,KAAK,KAAL,GAAa,CAAvB,CAAP;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AAED,EAAA,MAAM,CAAC,KAAD,EAAa;AACf,QAAI,CAAC,KAAL,EAAY;AACR,aAAO,KAAP;AACH;;AAED,WAAO,KAAK,KAAL,KAAe,KAAK,CAAC,KAA5B;AACH;;AApCa;;AAAlB,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Nonce = void 0;\nconst errors = __importStar(require(\"./errors\"));\n/**\n * The nonce, as an immutable object.\n */\nclass Nonce {\n    /**\n     * Creates a Nonce object given a value.\n     */\n    constructor(value) {\n        value = Number(value);\n        if (Number.isNaN(value) || value < 0) {\n            throw new errors.ErrNonceInvalid(value);\n        }\n        this.value = value;\n    }\n    /**\n     * Creates a new Nonce object by incrementing the current one.\n     */\n    increment() {\n        return new Nonce(this.value + 1);\n    }\n    valueOf() {\n        return this.value;\n    }\n    equals(other) {\n        if (!other) {\n            return false;\n        }\n        return this.value === other.value;\n    }\n}\nexports.Nonce = Nonce;\n//# sourceMappingURL=nonce.js.map"]},"metadata":{},"sourceType":"script"}