{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReturnCode = void 0;\n\nclass ReturnCode {\n  constructor(text) {\n    this.text = text;\n  }\n\n  static fromBuffer(buffer) {\n    let text = buffer.toString();\n    return new ReturnCode(text);\n  }\n\n  toString() {\n    return this.text;\n  }\n\n  valueOf() {\n    return this.text;\n  }\n\n  equals(other) {\n    if (!other) {\n      return false;\n    }\n\n    return this.text == other.text;\n  }\n\n  isSuccess() {\n    return this.equals(ReturnCode.Ok) || this.equals(ReturnCode.None);\n  }\n\n}\n\nexports.ReturnCode = ReturnCode;\nReturnCode.None = new ReturnCode(\"\");\nReturnCode.Ok = new ReturnCode(\"ok\");\nReturnCode.FunctionNotFound = new ReturnCode(\"function not found\");\nReturnCode.FunctionWrongSignature = new ReturnCode(\"wrong signature for function\");\nReturnCode.ContractNotFound = new ReturnCode(\"contract not found\");\nReturnCode.UserError = new ReturnCode(\"user error\");\nReturnCode.OutOfGas = new ReturnCode(\"out of gas\");\nReturnCode.AccountCollision = new ReturnCode(\"account collision\");\nReturnCode.OutOfFunds = new ReturnCode(\"out of funds\");\nReturnCode.CallStackOverFlow = new ReturnCode(\"call stack overflow\");\nReturnCode.ContractInvalid = new ReturnCode(\"contract invalid\");\nReturnCode.ExecutionFailed = new ReturnCode(\"execution failed\");\nReturnCode.Unknown = new ReturnCode(\"unknown\");","map":{"version":3,"sources":["../../src/smartcontracts/returnCode.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAa,UAAb,CAAuB;AAiBnB,EAAA,WAAA,CAAY,IAAZ,EAAwB;AACpB,SAAK,IAAL,GAAY,IAAZ;AACH;;AAEgB,SAAV,UAAU,CAAC,MAAD,EAAe;AAC5B,QAAI,IAAI,GAAG,MAAM,CAAC,QAAP,EAAX;AACA,WAAO,IAAI,UAAJ,CAAe,IAAf,CAAP;AACH;;AAED,EAAA,QAAQ,GAAA;AACJ,WAAO,KAAK,IAAZ;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,IAAZ;AACH;;AAED,EAAA,MAAM,CAAC,KAAD,EAAkB;AACpB,QAAI,CAAC,KAAL,EAAY;AACR,aAAO,KAAP;AACH;;AAED,WAAO,KAAK,IAAL,IAAa,KAAK,CAAC,IAA1B;AACH;;AAED,EAAA,SAAS,GAAA;AACL,WAAO,KAAK,MAAL,CAAY,UAAU,CAAC,EAAvB,KAA8B,KAAK,MAAL,CAAY,UAAU,CAAC,IAAvB,CAArC;AACH;;AA5CkB;;AAAvB,OAAA,CAAA,UAAA,GAAA,UAAA;AACW,UAAA,CAAA,IAAA,GAAO,IAAI,UAAJ,CAAe,EAAf,CAAP;AACA,UAAA,CAAA,EAAA,GAAK,IAAI,UAAJ,CAAe,IAAf,CAAL;AACA,UAAA,CAAA,gBAAA,GAAmB,IAAI,UAAJ,CAAe,oBAAf,CAAnB;AACA,UAAA,CAAA,sBAAA,GAAyB,IAAI,UAAJ,CAAe,8BAAf,CAAzB;AACA,UAAA,CAAA,gBAAA,GAAmB,IAAI,UAAJ,CAAe,oBAAf,CAAnB;AACA,UAAA,CAAA,SAAA,GAAY,IAAI,UAAJ,CAAe,YAAf,CAAZ;AACA,UAAA,CAAA,QAAA,GAAW,IAAI,UAAJ,CAAe,YAAf,CAAX;AACA,UAAA,CAAA,gBAAA,GAAmB,IAAI,UAAJ,CAAe,mBAAf,CAAnB;AACA,UAAA,CAAA,UAAA,GAAa,IAAI,UAAJ,CAAe,cAAf,CAAb;AACA,UAAA,CAAA,iBAAA,GAAoB,IAAI,UAAJ,CAAe,qBAAf,CAApB;AACA,UAAA,CAAA,eAAA,GAAkB,IAAI,UAAJ,CAAe,kBAAf,CAAlB;AACA,UAAA,CAAA,eAAA,GAAkB,IAAI,UAAJ,CAAe,kBAAf,CAAlB;AACA,UAAA,CAAA,OAAA,GAAU,IAAI,UAAJ,CAAe,SAAf,CAAV","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReturnCode = void 0;\nclass ReturnCode {\n    constructor(text) {\n        this.text = text;\n    }\n    static fromBuffer(buffer) {\n        let text = buffer.toString();\n        return new ReturnCode(text);\n    }\n    toString() {\n        return this.text;\n    }\n    valueOf() {\n        return this.text;\n    }\n    equals(other) {\n        if (!other) {\n            return false;\n        }\n        return this.text == other.text;\n    }\n    isSuccess() {\n        return this.equals(ReturnCode.Ok) || this.equals(ReturnCode.None);\n    }\n}\nexports.ReturnCode = ReturnCode;\nReturnCode.None = new ReturnCode(\"\");\nReturnCode.Ok = new ReturnCode(\"ok\");\nReturnCode.FunctionNotFound = new ReturnCode(\"function not found\");\nReturnCode.FunctionWrongSignature = new ReturnCode(\"wrong signature for function\");\nReturnCode.ContractNotFound = new ReturnCode(\"contract not found\");\nReturnCode.UserError = new ReturnCode(\"user error\");\nReturnCode.OutOfGas = new ReturnCode(\"out of gas\");\nReturnCode.AccountCollision = new ReturnCode(\"account collision\");\nReturnCode.OutOfFunds = new ReturnCode(\"out of funds\");\nReturnCode.CallStackOverFlow = new ReturnCode(\"call stack overflow\");\nReturnCode.ContractInvalid = new ReturnCode(\"contract invalid\");\nReturnCode.ExecutionFailed = new ReturnCode(\"execution failed\");\nReturnCode.Unknown = new ReturnCode(\"unknown\");\n//# sourceMappingURL=returnCode.js.map"]},"metadata":{},"sourceType":"script"}