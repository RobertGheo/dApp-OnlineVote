{"ast":null,"code":"'use strict';\n\nvar scryptsy = require('scryptsy');\n\nvar generateDerivedKey = function generateDerivedKey(key) {\n  var salt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var nrOfIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4096;\n  var memFactor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n  var pFactor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var dkLen = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 32;\n  return scryptsy(key, salt, nrOfIterations, memFactor, pFactor, dkLen);\n};\n\nmodule.exports = {\n  generateDerivedKey: generateDerivedKey\n};","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/node_modules/@elrondnetwork/elrond-core-js/dist/crypto/browser/keyDerivation.js"],"names":["scryptsy","require","generateDerivedKey","key","salt","arguments","length","undefined","nrOfIterations","memFactor","pFactor","dkLen","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AACxD,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AACA,MAAIG,cAAc,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAzF;AACA,MAAII,SAAS,GAAGJ,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAApF;AACA,MAAIK,OAAO,GAAGL,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAlF;AACA,MAAIM,KAAK,GAAGN,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,SAAOL,QAAQ,CAACG,GAAD,EAAMC,IAAN,EAAYI,cAAZ,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,KAAhD,CAAf;AACD,CAPD;;AASAC,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,kBAAkB,EAAEA;AADL,CAAjB","sourcesContent":["'use strict';\n\nvar scryptsy = require('scryptsy');\n\nvar generateDerivedKey = function generateDerivedKey(key) {\n  var salt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var nrOfIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4096;\n  var memFactor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n  var pFactor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var dkLen = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 32;\n  return scryptsy(key, salt, nrOfIterations, memFactor, pFactor, dkLen);\n};\n\nmodule.exports = {\n  generateDerivedKey: generateDerivedKey\n};"]},"metadata":{},"sourceType":"script"}