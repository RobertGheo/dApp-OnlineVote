{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrimitiveBinaryCodec = void 0;\n\nconst typesystem_1 = require(\"../typesystem\");\n\nconst address_1 = require(\"./address\");\n\nconst boolean_1 = require(\"./boolean\");\n\nconst numerical_1 = require(\"./numerical\");\n\nconst h256_1 = require(\"./h256\");\n\nconst bytes_1 = require(\"./bytes\");\n\nconst tokenIdentifier_1 = require(\"./tokenIdentifier\");\n\nconst nothing_1 = require(\"./nothing\");\n\nclass PrimitiveBinaryCodec {\n  constructor(binaryCodec) {\n    this.binaryCodec = binaryCodec;\n    this.booleanCodec = new boolean_1.BooleanBinaryCodec();\n    this.numericalCodec = new numerical_1.NumericalBinaryCodec();\n    this.addressCodec = new address_1.AddressBinaryCodec();\n    this.h256Codec = new h256_1.H256BinaryCodec();\n    this.bytesCodec = new bytes_1.BytesBinaryCodec();\n    this.tokenIdentifierCodec = new tokenIdentifier_1.TokenIdentifierCodec();\n    this.nothingCodec = new nothing_1.NothingCodec();\n  }\n\n  decodeNested(buffer, type) {\n    return typesystem_1.onPrimitiveTypeSelect(type, {\n      onBoolean: () => this.booleanCodec.decodeNested(buffer),\n      onNumerical: () => this.numericalCodec.decodeNested(buffer, type),\n      onAddress: () => this.addressCodec.decodeNested(buffer),\n      onBytes: () => this.bytesCodec.decodeNested(buffer),\n      onH256: () => this.h256Codec.decodeNested(buffer),\n      onTokenIndetifier: () => this.tokenIdentifierCodec.decodeNested(buffer),\n      onNothing: () => this.nothingCodec.decodeNested()\n    });\n  }\n\n  decodeTopLevel(buffer, type) {\n    return typesystem_1.onPrimitiveTypeSelect(type, {\n      onBoolean: () => this.booleanCodec.decodeTopLevel(buffer),\n      onNumerical: () => this.numericalCodec.decodeTopLevel(buffer, type),\n      onAddress: () => this.addressCodec.decodeTopLevel(buffer),\n      onBytes: () => this.bytesCodec.decodeTopLevel(buffer),\n      onH256: () => this.h256Codec.decodeTopLevel(buffer),\n      onTokenIndetifier: () => this.tokenIdentifierCodec.decodeTopLevel(buffer),\n      onNothing: () => this.nothingCodec.decodeTopLevel()\n    });\n  }\n\n  encodeNested(value) {\n    return typesystem_1.onPrimitiveValueSelect(value, {\n      onBoolean: () => this.booleanCodec.encodeNested(value),\n      onNumerical: () => this.numericalCodec.encodeNested(value),\n      onAddress: () => this.addressCodec.encodeNested(value),\n      onBytes: () => this.bytesCodec.encodeNested(value),\n      onH256: () => this.h256Codec.encodeNested(value),\n      onTypeIdentifier: () => this.tokenIdentifierCodec.encodeNested(value),\n      onNothing: () => this.nothingCodec.encodeNested()\n    });\n  }\n\n  encodeTopLevel(value) {\n    return typesystem_1.onPrimitiveValueSelect(value, {\n      onBoolean: () => this.booleanCodec.encodeTopLevel(value),\n      onNumerical: () => this.numericalCodec.encodeTopLevel(value),\n      onAddress: () => this.addressCodec.encodeTopLevel(value),\n      onBytes: () => this.bytesCodec.encodeTopLevel(value),\n      onH256: () => this.h256Codec.encodeTopLevel(value),\n      onTypeIdentifier: () => this.tokenIdentifierCodec.encodeTopLevel(value),\n      onNothing: () => this.nothingCodec.encodeTopLevel()\n    });\n  }\n\n}\n\nexports.PrimitiveBinaryCodec = PrimitiveBinaryCodec;","map":{"version":3,"mappings":"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","names":["PrimitiveBinaryCodec","constructor","binaryCodec","booleanCodec","boolean_1","numericalCodec","numerical_1","addressCodec","address_1","h256Codec","h256_1","bytesCodec","bytes_1","tokenIdentifierCodec","tokenIdentifier_1","nothingCodec","nothing_1","decodeNested","buffer","type","typesystem_1","onBoolean","onNumerical","onAddress","onBytes","onH256","onTokenIndetifier","onNothing","decodeTopLevel","encodeNested","value","onTypeIdentifier","encodeTopLevel","exports"],"sourceRoot":"","sources":["../../../src/smartcontracts/codec/primitive.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}