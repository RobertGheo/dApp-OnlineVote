{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/TransactionsList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGetAccountInfo, DappUI, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport moment from 'moment';\nimport txStatus from './txStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction sortByDate(a, b) {\n  if (a.timestamp < b.timestamp) {\n    return 1;\n  }\n\n  if (a.timestamp > b.timestamp) {\n    return -1;\n  }\n\n  return 0;\n}\n\nconst fakeSender = 'erd000000000000000000000000000000000000000000000000000000000a';\n\nconst TransactionList = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    network\n  } = useGetNetworkConfig();\n  const account = useGetAccountInfo();\n\n  const incoming = sender => sender === account.address && sender !== fakeSender; // eslint-disable-next-line\n\n\n  const doubleOwnTransactions = transactions.filter(tx => tx.sender === tx.receiver && tx.blockHash !== '').map(tx => ({ ...tx,\n    sender: fakeSender,\n    timestamp: tx.timestamp + 1\n  }));\n  const sortedTransactions = [...transactions, ...(doubleOwnTransactions.length > 0 ? doubleOwnTransactions : [])].filter(el => el !== undefined).sort(sortByDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3 mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-3 font-weight-normal\",\n      children: \"Smart Contract Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"transactions table pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-0 font-weight-normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-0 font-weight-normal\",\n              children: \"Tx hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-0 font-weight-normal\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border-0 font-weight-normal\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          \"data-testid\": \"transactionsList\",\n          children: sortedTransactions.map((tx, i) => {\n            const incomingTransaction = incoming(tx.sender);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"transaction-icon bg-light d-flex align-items-center justify-content-center\",\n                  title: txStatus[tx.status],\n                  children: /*#__PURE__*/_jsxDEV(Statu, {\n                    Icon: true,\n                    tx: tx,\n                    incomingTransaction: incomingTransaction\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"transaction-hash\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `${network.explorerAddress}/transactions/${tx.txHash}`,\n                  target: '_blank',\n                  title: \"View in Explorer\",\n                  children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                    \"data-testid\": \"txHash\",\n                    text: tx.txHash\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: moment.unix(tx.timestamp).format('MMM Do YYYY, h:mm A')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-right\",\n                children: [tx.value === '0' ? '' : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: tx.sender === account.address ? '-' : '+'\n                }, void 0, false), /*#__PURE__*/_jsxDEV(DappUI.Denominate, {\n                  value: tx.value,\n                  decimals: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, tx.txHash + i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `${network.explorerAddress}/address/${account.address}`,\n        target: '_blank',\n        children: \"See all transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionList, \"Rpr44bjePXI7crAUokY/U8Ci4/A=\", false, function () {\n  return [useGetNetworkConfig, useGetAccountInfo];\n});\n\n_c = TransactionList;\nexport default TransactionList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Transactions/TransactionsList.tsx"],"names":["React","useGetAccountInfo","DappUI","useGetNetworkConfig","moment","txStatus","sortByDate","a","b","timestamp","fakeSender","TransactionList","transactions","network","account","incoming","sender","address","doubleOwnTransactions","filter","tx","receiver","blockHash","map","sortedTransactions","length","el","undefined","sort","i","incomingTransaction","status","explorerAddress","txHash","target","unix","format","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport moment from 'moment';\nimport StatusIcon from './StatusIcon';\nimport txStatus from './txStatus';\nimport { TransactionType } from './types';\n\nfunction sortByDate(a: TransactionType, b: TransactionType) {\n  if (a.timestamp < b.timestamp) {\n    return 1;\n  }\n  if (a.timestamp > b.timestamp) {\n    return -1;\n  }\n  return 0;\n}\n\nconst fakeSender =\n  'erd000000000000000000000000000000000000000000000000000000000a';\n\nconst TransactionList = ({\n  transactions\n}: {\n  transactions: TransactionType[];\n}) => {\n  const { network } = useGetNetworkConfig();\n  const account = useGetAccountInfo();\n  const incoming = (sender: string) =>\n    sender === account.address && sender !== fakeSender;\n\n  // eslint-disable-next-line\n  const doubleOwnTransactions = transactions\n    .filter((tx) => tx.sender === tx.receiver && tx.blockHash !== '')\n    .map((tx) => ({ ...tx, sender: fakeSender, timestamp: tx.timestamp + 1 }));\n\n  const sortedTransactions: TransactionType[] = (\n    [\n      ...transactions,\n      ...(doubleOwnTransactions.length > 0 ? doubleOwnTransactions : [])\n    ].filter((el: any) => el !== undefined) as any\n  ).sort(sortByDate);\n\n  return (\n    <div className='p-3 mt-3'>\n      <h4 className='mb-3 font-weight-normal'>Smart Contract Transactions</h4>\n      <div className='table-responsive'>\n        <table className='transactions table pb-3'>\n          <thead>\n            <tr className='bg-light'>\n              <th className='border-0 font-weight-normal'></th>\n              <th className='border-0 font-weight-normal'>Tx hash</th>\n              <th className='border-0 font-weight-normal'>Date</th>\n              <th className='border-0 font-weight-normal'>Amount</th>\n            </tr>\n          </thead>\n          <tbody data-testid='transactionsList'>\n            {sortedTransactions.map((tx: TransactionType, i) => {\n              const incomingTransaction = incoming(tx.sender);\n\n              return (\n                <tr key={tx.txHash + i}>\n                  <td>\n                    <div\n                      className='transaction-icon bg-light d-flex align-items-center justify-content-center'\n                      title={txStatus[tx.status]}\n                    >\n                      <Statu Icon\n                        tx={tx}\n                        incomingTransaction={incomingTransaction}\n                      />\n                    </div>\n                  </td>\n                  <td className='transaction-hash'>\n                    <a\n                      href={`${network.explorerAddress}/transactions/${tx.txHash}`}\n                      {...{\n                        target: '_blank'\n                      }}\n                      title='View in Explorer'\n                    >\n                      <DappUI.Trim data-testid='txHash' text={tx.txHash} />\n                    </a>\n                  </td>\n                  <td>\n                    {moment.unix(tx.timestamp).format('MMM Do YYYY, h:mm A')}\n                  </td>\n                  <td className='text-right'>\n                    {tx.value === '0' ? (\n                      ''\n                    ) : (\n                      <>{tx.sender === account.address ? '-' : '+'}</>\n                    )}\n                    <DappUI.Denominate value={tx.value} decimals={2} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className='d-flex justify-content-center'>\n        <a\n          href={`${network.explorerAddress}/address/${account.address}`}\n          {...{\n            target: '_blank'\n          }}\n        >\n          See all transactions\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionList;\n"]},"metadata":{},"sourceType":"module"}