{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DappUI, logout, useGetAccountInfo, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport { Address, AddressValue, ContractFunction, ProxyProvider, Query } from '@elrondnetwork/erdjs';\nimport { contractAddressHex, contractClaim } from 'config';\nimport ClaimedToken from 'pages/ClaimedToken';\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport { routeNames } from 'routes';\nimport { Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const {\n    network\n  } = useGetNetworkConfig();\n  const [voteClaim, setVoteClaimed] = React.useState();\n  const [hasVotedTory, setVotedTory] = React.useState();\n\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n  /*\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc';\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);  \n  \n  type ApiTokenAccount = {\n    address: string;\n    balance: string;\n  };\n  //API request//\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote();\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n   const getCandidateVote = async () => {\n    const res = await fetch(\n      `${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`\n    );\n    if (!res.ok) return null;\n    const body = (await res.json()) as ApiTokenAccount[];\n    return body || [];\n  };\n  searchToken();\n  */\n  //view smart contract function\n\n\n  const verifyClaimVote = async () => {\n    const query = new Query({\n      address: new Address(contractClaim),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy.queryContract(query).then(_ref => {\n      let {\n        returnData\n      } = _ref;\n      const [encoded] = returnData;\n\n      switch (encoded) {\n        default:\n          {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVoteClaimed(Boolean(decoded));\n            break;\n          }\n      }\n    }).catch(err => {\n      console.error('Unable to call VM query', err);\n    });\n  };\n\n  verifyClaimVote();\n  const [voteStatus, setVoteStatus] = React.useState();\n\n  const CheckVote = async () => {\n    if (voteClaim == true) {\n      const query = new Query({\n        address: new Address(contractAddressHex),\n        func: new ContractFunction('didUserPing'),\n        args: [new AddressValue(new Address(address))]\n      });\n      const proxy = new ProxyProvider(network.apiAddress);\n      proxy.queryContract(query).then(_ref2 => {\n        let {\n          returnData\n        } = _ref2;\n        const [encoded] = returnData;\n\n        switch (encoded) {\n          default:\n            {\n              const decoded = Buffer.from(encoded, 'base64').toString('hex');\n              setVotedTory(Boolean(decoded));\n              break;\n            }\n        }\n      }).catch(err => {\n        console.error('Unable to call VM query', err);\n      });\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n  };\n\n  CheckVote();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pt-5 mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 col-md-10 col-lg-12 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card d-flex justify-content-center shadow bg-light rounded border-1\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!voteClaim && !hasVotedTory && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-light\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-light\",\n              children: /*#__PURE__*/_jsxDEV(RegisterInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), voteClaim && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-light\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-light\",\n                children: /*#__PURE__*/_jsxDEV(ClaimedToken, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body d-felx flex-column p-4\",\n              children: [/*#__PURE__*/_jsxDEV(StatutsVote, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pt-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), hasVotedTory && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              show: true,\n              className: \"p-5\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                className: \"badge badge-primary\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n                  children: \"Conservative Party Votes Ballot Box.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                className: \"h2 p-5 my-2 text-center\",\n                children: [\"You have already voted successfully.\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card pt-5 mt-4 border-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card p-3 text-left shadow border-primary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"h4\",\n                      children: \"Your address:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      \"data-testid\": \"accountAddress\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"text-primary h6\",\n                        href: `${network.explorerAddress}/address/${address}`,\n                        target: '_blank',\n                        rel: \"noopener noreferrer\",\n                        title: \"View in Explorer\",\n                        children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                          \"data-testid\": \"accountAddress\",\n                          text: address\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: routeNames.votedSuccessful,\n                  className: \"btn-success p-2 px-3 mx-3 my-2 rounded h2\",\n                  onClick: handleLogout,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"TaA0UB27ozdcl2Reho0VpbhuhxQ=\", false, function () {\n  return [useGetAccountInfo, useGetNetworkConfig];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx"],"names":["React","DappUI","logout","useGetAccountInfo","useGetNetworkConfig","Address","AddressValue","ContractFunction","ProxyProvider","Query","contractAddressHex","contractClaim","ClaimedToken","RegisterInfo","StatutsVote","routeNames","Modal","Link","Dashboard","address","network","voteClaim","setVoteClaimed","useState","hasVotedTory","setVotedTory","handleLogout","window","location","origin","votedSuccessful","verifyClaimVote","query","func","args","proxy","apiAddress","queryContract","then","returnData","encoded","decoded","Buffer","from","toString","Boolean","catch","err","console","error","voteStatus","setVoteStatus","CheckVote","Promise","resolve","setTimeout","explorerAddress","target"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  DappUI,\n  logout,\n  useGetAccountInfo,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  ProxyProvider,\n  Query\n} from '@elrondnetwork/erdjs';\nimport { contractAddressHex, contractClaim } from 'config';\nimport ClaimedToken from 'pages/ClaimedToken';\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport VotedBox1 from './helpers/votebox1';\nimport VotedBox2 from './helpers/votebox2';\nimport { routeNames } from 'routes';\nimport { Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const { network } = useGetNetworkConfig();\n  const [voteClaim, setVoteClaimed] = React.useState<boolean>();\n  const [hasVotedTory, setVotedTory] = React.useState<boolean>();\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n\n  /*\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc';\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);  \n  \n  type ApiTokenAccount = {\n    address: string;\n    balance: string;\n  };\n  //API request//\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote();\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n\n  const getCandidateVote = async () => {\n    const res = await fetch(\n      `${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`\n    );\n    if (!res.ok) return null;\n    const body = (await res.json()) as ApiTokenAccount[];\n    return body || [];\n  };\n  searchToken();\n  */\n\n  //view smart contract function\n  const verifyClaimVote = async () => {\n    const query = new Query({\n      address: new Address(contractClaim),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVoteClaimed(Boolean(decoded));\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n  };\n  verifyClaimVote();\n\n  const [voteStatus, setVoteStatus] = React.useState<boolean>();\n\n  const CheckVote = async () => {\n    if (voteClaim == true) {\n      const query = new Query({\n        address: new Address(contractAddressHex),\n        func: new ContractFunction('didUserPing'),\n        args: [new AddressValue(new Address(address))]\n      });\n      const proxy = new ProxyProvider(network.apiAddress);\n      proxy\n        .queryContract(query)\n        .then(({ returnData }) => {\n          const [encoded] = returnData;\n          switch (encoded) {\n            default: {\n              const decoded = Buffer.from(encoded, 'base64').toString('hex');\n              setVotedTory(Boolean(decoded));\n              break;\n            }\n          }\n        })\n        .catch((err) => {\n          console.error('Unable to call VM query', err);\n        });\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    }\n  };\n\n  CheckVote();\n\n  return (\n    <div className='container pt-5 mt-5'>\n      <div className='col-10 col-md-10 col-lg-12 mx-auto'>\n        <div className='card d-flex justify-content-center shadow bg-light rounded border-1'>\n          <>\n            {!voteClaim && !hasVotedTory &&(\n              <div className='card-header bg-light'>\n                <div className='text-light'>\n                  <RegisterInfo />\n                </div>\n              </div>\n            )}\n            {voteClaim && (\n              <>\n                <div className='card-header bg-light'>\n                  <div className='text-light'>\n                    <ClaimedToken />\n                  </div>\n                </div>\n                <div className='card-body d-felx flex-column p-4'>\n                  <StatutsVote />\n                  <div className='pt-1'></div>\n                </div>\n              </>\n            )}\n            {hasVotedTory && (\n              <>\n                <Modal show={true} className='p-5'>\n                  <Modal.Header className='badge badge-primary'>\n                    <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                      Conservative Party Votes Ballot Box.\n                    </div>\n                  </Modal.Header>\n                  <Modal.Body className='h2 p-5 my-2 text-center'>\n                    You have already voted successfully.\n                    <div className='card pt-5 mt-4 border-0'>\n                      <div className='card p-3 text-left shadow border-primary'>\n                        <span className='h4'>Your address:</span>\n                        <span data-testid='accountAddress'>\n                          <a\n                            className='text-primary h6'\n                            href={`${network.explorerAddress}/address/${address}`}\n                            {...{\n                              target: '_blank'\n                            }}\n                            rel='noopener noreferrer'\n                            title='View in Explorer'\n                          >\n                            <DappUI.Trim\n                              data-testid='accountAddress'\n                              text={address}\n                            />\n                          </a>\n                        </span>\n                      </div>\n                    </div>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Link\n                      to={routeNames.votedSuccessful}\n                      className='btn-success p-2 px-3 mx-3 my-2 rounded h2'\n                      onClick={handleLogout}\n                    >\n                      Close\n                    </Link>\n                  </Modal.Footer>\n                </Modal>\n              </>\n            )}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}