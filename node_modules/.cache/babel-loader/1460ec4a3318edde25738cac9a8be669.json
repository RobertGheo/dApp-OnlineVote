{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenIdentifierValue = exports.TokenIdentifierType = void 0;\n\nconst types_1 = require(\"./types\");\n\nclass TokenIdentifierType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"TokenIdentifier\");\n  }\n\n}\n\nexports.TokenIdentifierType = TokenIdentifierType;\n\nclass TokenIdentifierValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new TokenIdentifierType());\n    this.value = value;\n  }\n\n  getLength() {\n    return this.value.length;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   */\n\n\n  equals(other) {\n    if (this.getLength() != other.getLength()) {\n      return false;\n    }\n\n    return this.value.equals(other.value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.TokenIdentifierValue = TokenIdentifierValue;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/tokenIdentifier.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,MAAa,mBAAb,SAAyC,OAAA,CAAA,aAAzC,CAAsD;AAClD,EAAA,WAAA,GAAA;AACI,UAAM,iBAAN;AACH;;AAHiD;;AAAtD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAMA,MAAa,oBAAb,SAA0C,OAAA,CAAA,cAA1C,CAAwD;AAGpD,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,UAAM,IAAI,mBAAJ,EAAN;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AAED,EAAA,SAAS,GAAA;AACL,WAAO,KAAK,KAAL,CAAW,MAAlB;AACH;AAED;;AAEG;;;AACH,EAAA,MAAM,CAAC,KAAD,EAA4B;AAC9B,QAAI,KAAK,SAAL,MAAoB,KAAK,CAAC,SAAN,EAAxB,EAA2C;AACvC,aAAO,KAAP;AACH;;AAED,WAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CAAP;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AAzBmD;;AAAxD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenIdentifierValue = exports.TokenIdentifierType = void 0;\nconst types_1 = require(\"./types\");\nclass TokenIdentifierType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"TokenIdentifier\");\n    }\n}\nexports.TokenIdentifierType = TokenIdentifierType;\nclass TokenIdentifierValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new TokenIdentifierType());\n        this.value = value;\n    }\n    getLength() {\n        return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n    equals(other) {\n        if (this.getLength() != other.getLength()) {\n            return false;\n        }\n        return this.value.equals(other.value);\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.TokenIdentifierValue = TokenIdentifierValue;\n//# sourceMappingURL=tokenIdentifier.js.map"]},"metadata":{},"sourceType":"script"}