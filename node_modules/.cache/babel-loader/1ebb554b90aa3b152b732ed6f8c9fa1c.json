{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexBlue.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { transactionServices, useGetAccountInfo, useGetPendingTransactions, refreshAccount, useGetNetworkConfig, logout, DappUI } from '@elrondnetwork/dapp-core';\nimport { Address, AddressValue, ContractFunction, GasLimit, ProxyProvider, Query } from '@elrondnetwork/erdjs';\nimport { Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { contractAddressHex } from 'config';\nimport { routeNames } from 'routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActionsBlue = () => {\n  _s();\n\n  const account = useGetAccountInfo();\n  const {\n    hasPendingTransactions\n  } = useGetPendingTransactions();\n  const {\n    network\n  } = useGetNetworkConfig();\n  const {\n    address\n  } = account;\n\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n\n  const [hasVoted, setVoteStatus] = React.useState();\n  const\n  /*transactionSessionId*/\n  [, setTransactionSessionId] = React.useState(null);\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('didUserPing'),\n      //did user vote smart contract function\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy.queryContract(query).then(_ref => {\n      let {\n        returnData\n      } = _ref;\n      const [encoded] = returnData;\n\n      switch (encoded) {\n        default:\n          {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVoteStatus(Boolean(decoded));\n            break;\n          }\n      }\n    }).catch(err => {\n      console.error('Unable to call VM query', err);\n    });\n  }, [hasPendingTransactions]);\n  const {\n    sendTransactions\n  } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'ESDTTransfer@564f5445554b323032342d656363306463@01@766f7465746f7279',\n      receiver: contractAddressHex\n    };\n    await refreshAccount();\n    const {\n      sessionId\n      /*, error*/\n\n    } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Vote transaction',\n        errorMessage: 'An error has occured during Vote',\n        successMessage: 'Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  const [isBtnDisabled, setIsBtnDisabled] = React.useState(false);\n\n  async function showStatutVote() {\n    if (hasVoted) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setIsBtnDisabled(true);\n    } else {\n      setIsBtnDisabled(false);\n    }\n  }\n\n  function disableModal() {\n    setIsBtnDisabled(false);\n  }\n\n  showStatutVote();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex col justify-content-center\",\n    children: [!hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card row w-100 border-primary shadow mx-auto\",\n      onClick: sendPingTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary m-2\",\n        children: \"Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: \"text-dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), hasVoted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex col justify-content-center not-allowed disabled\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card row w-100 border-primary shadow mx-auto not-allowed disabled\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary not-allowed m-2 disabled\",\n          children: \"Voted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), isBtnDisabled && /*#__PURE__*/_jsxDEV(Modal, {\n          show: true,\n          className: \"p-5\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            className: \"badge badge-primary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n              children: \"Conservative Party Votes Ballot Box.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"h2 p-5 my-2 text-center\",\n            children: [\"Your vote has successfully been recorded.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card pt-5 mt-4 border-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card p-3 text-left shadow border-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"h4\",\n                  children: \"Your address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"data-testid\": \"accountAddress\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"text-primary h6\",\n                    href: `${network.explorerAddress}/address/${address}`,\n                    target: '_blank',\n                    rel: \"noopener noreferrer\",\n                    title: \"View in Explorer\",\n                    children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                      \"data-testid\": \"accountAddress\",\n                      text: address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: routeNames.votedSuccessful,\n              className: \"btn-success p-2 px-3 mx-3 my-2 rounded h2\",\n              onClick: handleLogout,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionsBlue, \"RPlD/01lzxecNg+nfYhxMBo//bA=\", false, function () {\n  return [useGetAccountInfo, useGetPendingTransactions, useGetNetworkConfig];\n});\n\n_c = ActionsBlue;\nexport default ActionsBlue;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionsBlue\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexBlue.tsx"],"names":["React","transactionServices","useGetAccountInfo","useGetPendingTransactions","refreshAccount","useGetNetworkConfig","logout","DappUI","Address","AddressValue","ContractFunction","GasLimit","ProxyProvider","Query","Modal","Link","contractAddressHex","routeNames","ActionsBlue","account","hasPendingTransactions","network","address","handleLogout","window","location","origin","votedSuccessful","hasVoted","setVoteStatus","useState","setTransactionSessionId","useEffect","query","func","args","proxy","apiAddress","queryContract","then","returnData","encoded","decoded","Buffer","from","toString","Boolean","catch","err","console","error","sendTransactions","sendPingTransaction","pingTransaction","value","gasLimit","data","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","isBtnDisabled","setIsBtnDisabled","showStatutVote","Promise","resolve","setTimeout","disableModal","explorerAddress","target"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  transactionServices,\n  useGetAccountInfo,\n  useGetPendingTransactions,\n  refreshAccount,\n  useGetNetworkConfig,\n  logout,\n  DappUI\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  GasLimit,\n  ProxyProvider,\n  Query\n} from '@elrondnetwork/erdjs';\nimport { Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { contractAddressHex } from 'config';\nimport { routeNames } from 'routes';\n\nconst ActionsBlue = () => {\n  const account = useGetAccountInfo();\n  const { hasPendingTransactions } = useGetPendingTransactions();\n  const { network } = useGetNetworkConfig();\n  const { address } = account;\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n\n  const [hasVoted, setVoteStatus] = React.useState<boolean>();\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('didUserPing'), //did user vote smart contract function\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVoteStatus(Boolean(decoded));\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n  }, [hasPendingTransactions]);\n\n  const { sendTransactions } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'ESDTTransfer@564f5445554b323032342d656363306463@01@766f7465746f7279',\n      receiver: contractAddressHex\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Vote transaction',\n        errorMessage: 'An error has occured during Vote',\n        successMessage: 'Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  const [isBtnDisabled, setIsBtnDisabled] = React.useState(false);\n  async function showStatutVote() {\n    if (hasVoted) {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      setIsBtnDisabled(true);\n    } else {\n      setIsBtnDisabled(false);\n    }\n  }\n  function disableModal() {\n    setIsBtnDisabled(false);\n  }\n  showStatutVote();\n\n  return (\n    <div className='d-flex col justify-content-center'>\n      {!hasVoted && (\n        <div\n          className='card row w-100 border-primary shadow mx-auto'\n          onClick={sendPingTransaction}\n        >\n          <button type='button' className='btn btn-primary m-2'>\n            Vote\n          </button>\n          <a href='/' className='text-dark'></a>\n        </div>\n      )}\n      {hasVoted && (\n        <div className='d-flex col justify-content-center not-allowed disabled'>\n          <div className='card row w-100 border-primary shadow mx-auto not-allowed disabled'>\n            <button className='btn btn-primary not-allowed m-2 disabled'>\n              Voted\n            </button>\n            {isBtnDisabled && (\n              <Modal show={true} className='p-5'>\n                <Modal.Header className='badge badge-primary'>\n                  <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                    Conservative Party Votes Ballot Box.\n                  </div>\n                </Modal.Header>\n                <Modal.Body className='h2 p-5 my-2 text-center'>\n                  Your vote has successfully been recorded.\n                  <div className='card pt-5 mt-4 border-0'>\n                    <div className='card p-3 text-left shadow border-primary'>\n                      <span className='h4'>Your address:</span>\n                      <span data-testid='accountAddress'>\n                        <a\n                          className='text-primary h6'\n                          href={`${network.explorerAddress}/address/${address}`}\n                          {...{\n                            target: '_blank'\n                          }}\n                          rel='noopener noreferrer'\n                          title='View in Explorer'\n                        >\n                          <DappUI.Trim\n                            data-testid='accountAddress'\n                            text={address}\n                          />\n                        </a>\n                      </span>\n                    </div>\n                  </div>\n                </Modal.Body>\n                <Modal.Footer>\n                  <Link\n                    to={routeNames.votedSuccessful}\n                    className='btn-success p-2 px-3 mx-3 my-2 rounded h2'\n                    onClick={handleLogout}\n                  >\n                    Close\n                  </Link>\n                </Modal.Footer>\n              </Modal>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ActionsBlue;\n"]},"metadata":{},"sourceType":"module"}