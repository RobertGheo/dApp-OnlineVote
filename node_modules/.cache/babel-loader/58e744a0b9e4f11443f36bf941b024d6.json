{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GasPriceModifier = exports.TransactionOptions = exports.TransactionVersion = exports.ChainID = exports.GasLimit = exports.GasPrice = void 0;\n\nconst networkConfig_1 = require(\"./networkConfig\");\n\nconst errors = __importStar(require(\"./errors\"));\n\nconst balanceBuilder_1 = require(\"./balanceBuilder\");\n\nconst constants_1 = require(\"./constants\");\n/**\n * The gas price, as an immutable object.\n */\n\n\nclass GasPrice {\n  /**\n   * Creates a GasPrice object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (Number.isNaN(value) || value < 0) {\n      throw new errors.ErrGasPriceInvalid(value);\n    }\n\n    this.value = value;\n  }\n\n  toDenominated() {\n    let asBalance = balanceBuilder_1.Egld.raw(this.value.toString(10));\n    return asBalance.toDenominated();\n  }\n  /**\n   * Creates a GasPrice object using the minimum value.\n   */\n\n\n  static min() {\n    let value = networkConfig_1.NetworkConfig.getDefault().MinGasPrice.value;\n    return new GasPrice(value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.GasPrice = GasPrice;\n/**\n * The gas limit, as an immutable object.\n */\n\nclass GasLimit {\n  /**\n   * Creates a GasLimit object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (Number.isNaN(value) || value < 0) {\n      throw new errors.ErrGasLimitInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a GasLimit object for a value-transfer {@link Transaction}.\n   */\n\n\n  static forTransfer(data) {\n    let value = networkConfig_1.NetworkConfig.getDefault().MinGasLimit.value;\n\n    if (data) {\n      value += networkConfig_1.NetworkConfig.getDefault().GasPerDataByte * data.length();\n    }\n\n    return new GasLimit(value);\n  }\n  /**\n   * Creates a GasLimit object using the minimum value.\n   */\n\n\n  static min() {\n    let value = networkConfig_1.NetworkConfig.getDefault().MinGasLimit.value;\n    return new GasLimit(value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.GasLimit = GasLimit;\n\nclass ChainID {\n  /**\n   * Creates a ChainID object given a value.\n   */\n  constructor(value) {\n    if (!value) {\n      throw new errors.ErrChainIDInvalid(value);\n    }\n\n    this.value = value;\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.ChainID = ChainID;\n\nclass TransactionVersion {\n  /**\n   * Creates a TransactionVersion object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value < 1) {\n      throw new errors.ErrTransactionVersionInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a TransactionVersion object with the default version setting\n   */\n\n\n  static withDefaultVersion() {\n    return new TransactionVersion(constants_1.TRANSACTION_VERSION_DEFAULT);\n  }\n  /**\n   * Creates a TransactionVersion object with the VERSION setting for hash signing\n   */\n\n\n  static withTxHashSignVersion() {\n    return new TransactionVersion(constants_1.TRANSACTION_VERSION_TX_HASH_SIGN);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.TransactionVersion = TransactionVersion;\n\nclass TransactionOptions {\n  /**\n   * Creates a TransactionOptions object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value < 0) {\n      throw new errors.ErrTransactionOptionsInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a TransactionOptions object with the default options setting\n   */\n\n\n  static withDefaultOptions() {\n    return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_DEFAULT);\n  }\n  /**\n   * Created a TransactionsOptions object with the setting for hash signing\n   */\n\n\n  static withTxHashSignOptions() {\n    return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_TX_HASH_SIGN);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.TransactionOptions = TransactionOptions;\n\nclass GasPriceModifier {\n  /**\n   * Creates a GasPriceModifier object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value <= 0 || value > 1) {\n      throw new errors.ErrGasPriceModifierInvalid(value);\n    }\n\n    this.value = value;\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.GasPriceModifier = GasPriceModifier;","map":{"version":3,"sources":["../src/networkParams.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAMA;;AAEG;;;AACH,MAAa,QAAb,CAAqB;AAMjB;;AAEG;AACH,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;;AAEA,QAAI,MAAM,CAAC,KAAP,CAAa,KAAb,KAAuB,KAAK,GAAG,CAAnC,EAAsC;AAClC,YAAM,IAAI,MAAM,CAAC,kBAAX,CAA8B,KAA9B,CAAN;AACH;;AAED,SAAK,KAAL,GAAa,KAAb;AACH;;AAED,EAAA,aAAa,GAAA;AACT,QAAI,SAAS,GAAG,gBAAA,CAAA,IAAA,CAAK,GAAL,CAAS,KAAK,KAAL,CAAW,QAAX,CAAoB,EAApB,CAAT,CAAhB;AACA,WAAO,SAAS,CAAC,aAAV,EAAP;AACH;AAED;;AAEG;;;AACO,SAAH,GAAG,GAAA;AACN,QAAI,KAAK,GAAG,eAAA,CAAA,aAAA,CAAc,UAAd,GAA2B,WAA3B,CAAuC,KAAnD;AACA,WAAO,IAAI,QAAJ,CAAa,KAAb,CAAP;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AAlCgB;;AAArB,OAAA,CAAA,QAAA,GAAA,QAAA;AAqCA;;AAEG;;AACH,MAAa,QAAb,CAAqB;AAMjB;;AAEG;AACH,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;;AAEA,QAAI,MAAM,CAAC,KAAP,CAAa,KAAb,KAAuB,KAAK,GAAG,CAAnC,EAAsC;AAClC,YAAM,IAAI,MAAM,CAAC,kBAAX,CAA8B,KAA9B,CAAN;AACH;;AAED,SAAK,KAAL,GAAa,KAAb;AACH;AAED;;AAEG;;;AACe,SAAX,WAAW,CAAC,IAAD,EAAyB;AACvC,QAAI,KAAK,GAAG,eAAA,CAAA,aAAA,CAAc,UAAd,GAA2B,WAA3B,CAAuC,KAAnD;;AAEA,QAAI,IAAJ,EAAU;AACN,MAAA,KAAK,IAAI,eAAA,CAAA,aAAA,CAAc,UAAd,GAA2B,cAA3B,GAA4C,IAAI,CAAC,MAAL,EAArD;AACH;;AAED,WAAO,IAAI,QAAJ,CAAa,KAAb,CAAP;AACH;AAED;;AAEG;;;AACO,SAAH,GAAG,GAAA;AACN,QAAI,KAAK,GAAG,eAAA,CAAA,aAAA,CAAc,UAAd,GAA2B,WAA3B,CAAuC,KAAnD;AACA,WAAO,IAAI,QAAJ,CAAa,KAAb,CAAP;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AA1CgB;;AAArB,OAAA,CAAA,QAAA,GAAA,QAAA;;AA8CA,MAAa,OAAb,CAAoB;AAMhB;;AAEG;AACH,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,QAAI,CAAC,KAAL,EAAY;AACR,YAAM,IAAI,MAAM,CAAC,iBAAX,CAA6B,KAA7B,CAAN;AACH;;AAED,SAAK,KAAL,GAAa,KAAb;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AAnBe;;AAApB,OAAA,CAAA,OAAA,GAAA,OAAA;;AAsBA,MAAa,kBAAb,CAA+B;AAM3B;;AAEG;AACH,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;;AAEA,QAAI,KAAK,GAAG,CAAZ,EAAe;AACX,YAAM,IAAI,MAAM,CAAC,4BAAX,CAAwC,KAAxC,CAAN;AACH;;AAED,SAAK,KAAL,GAAa,KAAb;AACH;AAED;;AAEG;;;AACsB,SAAlB,kBAAkB,GAAA;AACrB,WAAO,IAAI,kBAAJ,CAAuB,WAAA,CAAA,2BAAvB,CAAP;AACH;AAED;;AAEG;;;AACyB,SAArB,qBAAqB,GAAA;AACxB,WAAO,IAAI,kBAAJ,CAAuB,WAAA,CAAA,gCAAvB,CAAP;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AAnC0B;;AAA/B,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAsCA,MAAa,kBAAb,CAA+B;AAM3B;;AAEG;AACH,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;;AAEA,QAAI,KAAK,GAAG,CAAZ,EAAe;AACX,YAAM,IAAI,MAAM,CAAC,4BAAX,CAAwC,KAAxC,CAAN;AACH;;AAED,SAAK,KAAL,GAAa,KAAb;AACH;AAED;;AAEG;;;AACsB,SAAlB,kBAAkB,GAAA;AACrB,WAAO,IAAI,kBAAJ,CAAuB,WAAA,CAAA,2BAAvB,CAAP;AACH;AAED;;AAEG;;;AACyB,SAArB,qBAAqB,GAAA;AACxB,WAAO,IAAI,kBAAJ,CAAuB,WAAA,CAAA,gCAAvB,CAAP;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AAnC0B;;AAA/B,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAsCA,MAAa,gBAAb,CAA6B;AAMzB;;AAEG;AACH,EAAA,WAAA,CAAY,KAAZ,EAAyB;AACrB,IAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;;AAEA,QAAI,KAAK,IAAI,CAAT,IAAc,KAAK,GAAG,CAA1B,EAA6B;AACzB,YAAM,IAAI,MAAM,CAAC,0BAAX,CAAsC,KAAtC,CAAN;AACH;;AAED,SAAK,KAAL,GAAa,KAAb;AACH;;AAED,EAAA,OAAO,GAAA;AACH,WAAO,KAAK,KAAZ;AACH;;AArBwB;;AAA7B,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GasPriceModifier = exports.TransactionOptions = exports.TransactionVersion = exports.ChainID = exports.GasLimit = exports.GasPrice = void 0;\nconst networkConfig_1 = require(\"./networkConfig\");\nconst errors = __importStar(require(\"./errors\"));\nconst balanceBuilder_1 = require(\"./balanceBuilder\");\nconst constants_1 = require(\"./constants\");\n/**\n * The gas price, as an immutable object.\n */\nclass GasPrice {\n    /**\n     * Creates a GasPrice object given a value.\n     */\n    constructor(value) {\n        value = Number(value);\n        if (Number.isNaN(value) || value < 0) {\n            throw new errors.ErrGasPriceInvalid(value);\n        }\n        this.value = value;\n    }\n    toDenominated() {\n        let asBalance = balanceBuilder_1.Egld.raw(this.value.toString(10));\n        return asBalance.toDenominated();\n    }\n    /**\n     * Creates a GasPrice object using the minimum value.\n     */\n    static min() {\n        let value = networkConfig_1.NetworkConfig.getDefault().MinGasPrice.value;\n        return new GasPrice(value);\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.GasPrice = GasPrice;\n/**\n * The gas limit, as an immutable object.\n */\nclass GasLimit {\n    /**\n     * Creates a GasLimit object given a value.\n     */\n    constructor(value) {\n        value = Number(value);\n        if (Number.isNaN(value) || value < 0) {\n            throw new errors.ErrGasLimitInvalid(value);\n        }\n        this.value = value;\n    }\n    /**\n     * Creates a GasLimit object for a value-transfer {@link Transaction}.\n     */\n    static forTransfer(data) {\n        let value = networkConfig_1.NetworkConfig.getDefault().MinGasLimit.value;\n        if (data) {\n            value += networkConfig_1.NetworkConfig.getDefault().GasPerDataByte * data.length();\n        }\n        return new GasLimit(value);\n    }\n    /**\n     * Creates a GasLimit object using the minimum value.\n     */\n    static min() {\n        let value = networkConfig_1.NetworkConfig.getDefault().MinGasLimit.value;\n        return new GasLimit(value);\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.GasLimit = GasLimit;\nclass ChainID {\n    /**\n     * Creates a ChainID object given a value.\n     */\n    constructor(value) {\n        if (!value) {\n            throw new errors.ErrChainIDInvalid(value);\n        }\n        this.value = value;\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.ChainID = ChainID;\nclass TransactionVersion {\n    /**\n     * Creates a TransactionVersion object given a value.\n     */\n    constructor(value) {\n        value = Number(value);\n        if (value < 1) {\n            throw new errors.ErrTransactionVersionInvalid(value);\n        }\n        this.value = value;\n    }\n    /**\n     * Creates a TransactionVersion object with the default version setting\n     */\n    static withDefaultVersion() {\n        return new TransactionVersion(constants_1.TRANSACTION_VERSION_DEFAULT);\n    }\n    /**\n     * Creates a TransactionVersion object with the VERSION setting for hash signing\n     */\n    static withTxHashSignVersion() {\n        return new TransactionVersion(constants_1.TRANSACTION_VERSION_TX_HASH_SIGN);\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.TransactionVersion = TransactionVersion;\nclass TransactionOptions {\n    /**\n     * Creates a TransactionOptions object given a value.\n     */\n    constructor(value) {\n        value = Number(value);\n        if (value < 0) {\n            throw new errors.ErrTransactionOptionsInvalid(value);\n        }\n        this.value = value;\n    }\n    /**\n     * Creates a TransactionOptions object with the default options setting\n     */\n    static withDefaultOptions() {\n        return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_DEFAULT);\n    }\n    /**\n     * Created a TransactionsOptions object with the setting for hash signing\n     */\n    static withTxHashSignOptions() {\n        return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_TX_HASH_SIGN);\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.TransactionOptions = TransactionOptions;\nclass GasPriceModifier {\n    /**\n     * Creates a GasPriceModifier object given a value.\n     */\n    constructor(value) {\n        value = Number(value);\n        if (value <= 0 || value > 1) {\n            throw new errors.ErrGasPriceModifierInvalid(value);\n        }\n        this.value = value;\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.GasPriceModifier = GasPriceModifier;\n//# sourceMappingURL=networkParams.js.map"]},"metadata":{},"sourceType":"script"}