{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexBlue.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { transactionServices, useGetAccountInfo, useGetPendingTransactions, refreshAccount, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport { Address, AddressValue, ContractFunction, GasLimit, ProxyProvider, Query } from '@elrondnetwork/erdjs'; //import { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport moment from 'moment';\nimport { Modal } from 'react-bootstrap';\nimport { contractAddressHex } from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ActionsBlue = () => {\n  _s();\n\n  const account = useGetAccountInfo();\n  const {\n    hasPendingTransactions\n  } = useGetPendingTransactions();\n  const {\n    network\n  } = useGetNetworkConfig();\n  const {\n    address\n  } = account;\n  const [secondsLeft, setSecondsLeft] = React.useState();\n  const [hasPing, setHasPing] = React.useState();\n  const [hasPing1, setHasPing1] = React.useState();\n  const\n  /*transactionSessionId*/\n  [, setTransactionSessionId] = React.useState(null);\n\n  const mount = () => {\n    if (secondsLeft) {\n      const interval = setInterval(() => {\n        setSecondsLeft(existing => {\n          if (existing) {\n            return existing - 1;\n          } else {\n            clearInterval(interval);\n            return 0;\n          }\n        });\n      }, 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  //React.useEffect(mount, [hasPing]);\n\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('getTimeToPong'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy.queryContract(query).then(_ref => {\n      let {\n        returnData\n      } = _ref;\n      const [encoded] = returnData;\n\n      switch (encoded) {\n        case undefined:\n          setHasPing(true);\n          break;\n\n        case '':\n          setSecondsLeft(0);\n          setHasPing(false);\n          break;\n\n        default:\n          {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setSecondsLeft(parseInt(decoded, 16));\n            setHasPing(false);\n            break;\n          }\n      }\n    }).catch(err => {\n      console.error('Unable to call VM query', err);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasPendingTransactions]);\n  const {\n    sendTransactions\n  } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'ESDTTransfer@564f5445554b323032342d353534646362@01@70696e67',\n      receiver: contractAddressHex\n    };\n    await refreshAccount();\n    const {\n      sessionId\n      /*, error*/\n\n    } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Vote transaction',\n        errorMessage: 'An error has occured during Vote',\n        successMessage: 'Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n\n    voteStatus();\n  };\n\n  const pongAllowed = secondsLeft === 0 && !hasPendingTransactions;\n  const notAllowedClass = pongAllowed ? '' : 'not-allowed disabled';\n  const timeRemaining = moment().startOf('day').seconds(secondsLeft || 0).format('mm:ss');\n  const [success, setSuccess] = React.useState(false);\n\n  function closeVoteStatus() {\n    setSuccess(false);\n  }\n\n  async function voteStatus() {\n    await new Promise(resolve => setTimeout(resolve, 5000));\n    setSuccess(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex col justify-content-center\",\n    children: hasPing !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: hasPing && !hasPendingTransactions ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card row w-100 border-primary shadow mx-auto\",\n        onClick: sendPingTransaction,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary m-2\",\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"text-dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex col justify-content-center not-allowed disabled\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card row w-100 border-primary shadow mx-auto not-allowed disabled\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary m-2 disabled\",\n              onClick: voteStatus,\n              children: \"Voted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), success && /*#__PURE__*/_jsxDEV(Modal, {\n              show: true,\n              className: \"p-5\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                className: \"badge badge-primary\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n                  children: \"Conservative Party Votes Ballot Box.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                className: \"h2 p-5 m-2 text-center\",\n                children: \"Your vote has successfully been recorded.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-success p-2 px-3 mx-3 my-2 rounded h4\",\n                  onClick: closeVoteStatus,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionsBlue, \"dHmH6XtaG2UDtpAaqGkgY1P9nug=\", false, function () {\n  return [useGetAccountInfo, useGetPendingTransactions, useGetNetworkConfig];\n});\n\n_c = ActionsBlue;\nexport default ActionsBlue;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionsBlue\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/Actions/indexBlue.tsx"],"names":["React","transactionServices","useGetAccountInfo","useGetPendingTransactions","refreshAccount","useGetNetworkConfig","Address","AddressValue","ContractFunction","GasLimit","ProxyProvider","Query","moment","Modal","contractAddressHex","ActionsBlue","account","hasPendingTransactions","network","address","secondsLeft","setSecondsLeft","useState","hasPing","setHasPing","hasPing1","setHasPing1","setTransactionSessionId","mount","interval","setInterval","existing","clearInterval","useEffect","query","func","args","proxy","apiAddress","queryContract","then","returnData","encoded","undefined","decoded","Buffer","from","toString","parseInt","catch","err","console","error","sendTransactions","sendPingTransaction","pingTransaction","value","gasLimit","data","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","voteStatus","pongAllowed","notAllowedClass","timeRemaining","startOf","seconds","format","success","setSuccess","closeVoteStatus","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  transactionServices,\n  useGetAccountInfo,\n  useGetPendingTransactions,\n  refreshAccount,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  GasLimit,\n  ProxyProvider,\n  Query\n} from '@elrondnetwork/erdjs';\n//import { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport { Modal } from 'react-bootstrap';\nimport { contractAddressHex, contractAddressHex1 } from 'config';\n\nconst ActionsBlue = () => {\n  const account = useGetAccountInfo();\n  const { hasPendingTransactions } = useGetPendingTransactions();\n  const { network } = useGetNetworkConfig();\n  const { address } = account;\n\n  const [secondsLeft, setSecondsLeft] = React.useState<number>();\n  const [hasPing, setHasPing] = React.useState<boolean>();\n  const [hasPing1, setHasPing1] = React.useState<boolean>();\n  const /*transactionSessionId*/ [, setTransactionSessionId] = React.useState<\n      string | null\n    >(null);\n\n  const mount = () => {\n    if (secondsLeft) {\n      const interval = setInterval(() => {\n        setSecondsLeft((existing) => {\n          if (existing) {\n            return existing - 1;\n          } else {\n            clearInterval(interval);\n            return 0;\n          }\n        });\n      }, 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  //React.useEffect(mount, [hasPing]);\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('getTimeToPong'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          case undefined:\n            setHasPing(true);\n            break;\n          case '':\n            setSecondsLeft(0);\n            setHasPing(false);\n            break;\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setSecondsLeft(parseInt(decoded, 16));\n            setHasPing(false);\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasPendingTransactions]);\n\n  const { sendTransactions } = transactionServices;\n\n  const sendPingTransaction = async () => {\n    const pingTransaction = {\n      value: '0',\n      gasLimit: new GasLimit(4000000),\n      data: 'ESDTTransfer@564f5445554b323032342d353534646362@01@70696e67',\n      receiver: contractAddressHex\n    };\n    await refreshAccount();\n\n    const { sessionId /*, error*/ } = await sendTransactions({\n      transactions: pingTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing Vote transaction',\n        errorMessage: 'An error has occured during Vote',\n        successMessage: 'Vote transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n    voteStatus();\n  };\n\n  const pongAllowed = secondsLeft === 0 && !hasPendingTransactions;\n  const notAllowedClass = pongAllowed ? '' : 'not-allowed disabled';\n\n  const timeRemaining = moment()\n    .startOf('day')\n    .seconds(secondsLeft || 0)\n    .format('mm:ss');\n\n  const [success, setSuccess] = React.useState(false);\n\n  function closeVoteStatus() {\n    setSuccess(false);\n  }\n  async function voteStatus() {\n    await new Promise((resolve) => setTimeout(resolve, 5000));\n    setSuccess(true);\n  }\n\n  return (\n    <div className='d-flex col justify-content-center'>\n      {hasPing !== undefined && (\n        <>\n          {hasPing && !hasPendingTransactions ? (\n            <div\n              className='card row w-100 border-primary shadow mx-auto'\n              onClick={sendPingTransaction}\n            >\n              <button type='button' className='btn btn-primary m-2'>\n                Vote\n              </button>\n              <a href='/' className='text-dark'></a>\n            </div>\n          ) : (\n            <>\n              <div className='d-flex col justify-content-center not-allowed disabled'>\n                <div className='card row w-100 border-primary shadow mx-auto not-allowed disabled'>\n                  <button\n                    className='btn btn-primary m-2 disabled'\n                    onClick={voteStatus}\n                  >\n                    Voted\n                  </button>\n                  {success && (\n                    <Modal show={true} className='p-5'>\n                      <Modal.Header className='badge badge-primary'>\n                        <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                          Conservative Party Votes Ballot Box.\n                        </div>\n                      </Modal.Header>\n                      <Modal.Body className='h2 p-5 m-2 text-center'>\n                        Your vote has successfully been recorded.\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <button\n                          className='btn-success p-2 px-3 mx-3 my-2 rounded h4'\n                          onClick={closeVoteStatus}\n                        >\n                          Close\n                        </button>\n                      </Modal.Footer>\n                    </Modal>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ActionsBlue;\n"]},"metadata":{},"sourceType":"module"}