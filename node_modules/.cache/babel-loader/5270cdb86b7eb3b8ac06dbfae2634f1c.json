{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { logout, useGetAccountInfo, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport { Address, AddressValue, ContractFunction, ProxyProvider, Query } from '@elrondnetwork/erdjs';\nimport { contractAddressHex, contractClaim } from 'config';\nimport ClaimedToken from 'pages/ClaimedToken';\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport { Link } from 'react-router-dom';\nimport { routeNames } from 'routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    address\n  } = useGetAccountInfo();\n\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n  /*\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc';\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);  \n  \n  type ApiTokenAccount = {\n    address: string;\n    balance: string;\n  };\n  //API request//\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote();\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n   const getCandidateVote = async () => {\n    const res = await fetch(\n      `${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`\n    );\n    if (!res.ok) return null;\n    const body = (await res.json()) as ApiTokenAccount[];\n    return body || [];\n  };\n  searchToken();\n  */\n\n\n  const {\n    network\n  } = useGetNetworkConfig();\n  const [voteClaim, setVoteClaimed] = React.useState();\n  const [hasVotedTory, setVotedTory] = React.useState();\n  const [hasVotedLabour, setVotedLabour] = React.useState();\n\n  const checkVoteStatus = async () => {\n    _s();\n\n    //view smart contract function\n    React.useEffect(() => {\n      const query = new Query({\n        address: new Address(contractClaim),\n        func: new ContractFunction('didUserPing'),\n        args: [new AddressValue(new Address(address))]\n      });\n      const proxy = new ProxyProvider(network.apiAddress);\n      proxy.queryContract(query).then(_ref => {\n        let {\n          returnData\n        } = _ref;\n        const [encoded] = returnData;\n\n        switch (encoded) {\n          default:\n            {\n              const decoded = Buffer.from(encoded, 'base64').toString('hex');\n              setVoteClaimed(Boolean(decoded));\n              break;\n            }\n        }\n      }).catch(err => {\n        console.error('Unable to call VM query', err);\n      });\n    });\n\n    if (voteClaim) {\n      await new Promise(resolve => setTimeout(resolve, 50));\n      React.useEffect(() => {\n        const query = new Query({\n          address: new Address(contractAddressHex),\n          func: new ContractFunction('didUserPing'),\n          args: [new AddressValue(new Address(address))]\n        });\n        const proxy = new ProxyProvider(network.apiAddress);\n        proxy.queryContract(query).then(_ref2 => {\n          let {\n            returnData\n          } = _ref2;\n          const [encoded] = returnData;\n\n          switch (encoded) {\n            default:\n              {\n                const decoded = Buffer.from(encoded, 'base64').toString('hex');\n                setVotedTory(Boolean(decoded));\n                break;\n              }\n          }\n        }).catch(err => {\n          console.error('Unable to call VM query', err);\n        });\n      });\n    }\n\n    if (hasVotedTory) {\n      await new Promise(resolve => setTimeout(resolve, 50));\n      React.useEffect(() => {\n        const query = new Query({\n          address: new Address(contractAddressHex),\n          func: new ContractFunction('didUserPing'),\n          args: [new AddressValue(new Address(address))]\n        });\n        const proxy = new ProxyProvider(network.apiAddress);\n        proxy.queryContract(query).then(_ref3 => {\n          let {\n            returnData\n          } = _ref3;\n          const [encoded] = returnData;\n\n          switch (encoded) {\n            default:\n              {\n                const decoded = Buffer.from(encoded, 'base64').toString('hex');\n                setVotedLabour(Boolean(decoded));\n                break;\n              }\n          }\n        }).catch(err => {\n          console.error('Unable to call VM query', err);\n        });\n      });\n    }\n  };\n\n  _s(checkVoteStatus, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n\n  checkVoteStatus();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pt-5 mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 col-md-10 col-lg-12 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card d-flex justify-content-center shadow bg-light rounded border-1\",\n        children: [!voteClaim && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header bg-light\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-light\",\n            children: /*#__PURE__*/_jsxDEV(RegisterInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), voteClaim && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-light\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-light\",\n              children: /*#__PURE__*/_jsxDEV(ClaimedToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body d-felx flex-column p-4\",\n            children: [/*#__PURE__*/_jsxDEV(StatutsVote, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pt-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), voteClaim && hasVotedTory || hasVotedLabour && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: routeNames.votedSuccessful,\n            className: \"btn-success p-2 px-3 mx-3 my-2 rounded h2\",\n            onClick: handleLogout,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Dashboard, \"u9IVCsMbV2+bQmQIjuCzCF6TkXg=\", false, function () {\n  return [useGetAccountInfo, useGetNetworkConfig];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx"],"names":["React","logout","useGetAccountInfo","useGetNetworkConfig","Address","AddressValue","ContractFunction","ProxyProvider","Query","contractAddressHex","contractClaim","ClaimedToken","RegisterInfo","StatutsVote","Link","routeNames","Dashboard","address","handleLogout","window","location","origin","votedSuccessful","network","voteClaim","setVoteClaimed","useState","hasVotedTory","setVotedTory","hasVotedLabour","setVotedLabour","checkVoteStatus","useEffect","query","func","args","proxy","apiAddress","queryContract","then","returnData","encoded","decoded","Buffer","from","toString","Boolean","catch","err","console","error","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  logout,\n  useGetAccountInfo,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  ProxyProvider,\n  Query\n} from '@elrondnetwork/erdjs';\nimport { contractAddress, contractAddressHex, contractClaim } from 'config';\nimport ClaimedToken from 'pages/ClaimedToken';\nimport Transaction from 'pages/Transaction';\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport { Link } from 'react-router-dom';\nimport { routeNames } from 'routes';\n\nconst Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n\n  /*\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc';\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);  \n  \n  type ApiTokenAccount = {\n    address: string;\n    balance: string;\n  };\n  //API request//\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote();\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n\n  const getCandidateVote = async () => {\n    const res = await fetch(\n      `${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`\n    );\n    if (!res.ok) return null;\n    const body = (await res.json()) as ApiTokenAccount[];\n    return body || [];\n  };\n  searchToken();\n  */\n  const { network } = useGetNetworkConfig();\n  const [voteClaim, setVoteClaimed] = React.useState<boolean>();\n  const [hasVotedTory, setVotedTory] = React.useState<boolean>();\n  const [hasVotedLabour, setVotedLabour] = React.useState<boolean>();\n\n  const checkVoteStatus = async() => {\n  //view smart contract function\n    React.useEffect(() => {\n      const query = new Query({\n        address: new Address(contractClaim),\n        func: new ContractFunction('didUserPing'),\n        args: [new AddressValue(new Address(address))]\n      });\n      const proxy = new ProxyProvider(network.apiAddress);\n      proxy\n        .queryContract(query)\n        .then(({ returnData }) => {\n          const [encoded] = returnData;\n          switch (encoded) {\n            default: {\n              const decoded = Buffer.from(encoded, 'base64').toString('hex');\n              setVoteClaimed(Boolean(decoded));\n              break;\n            }\n          }\n        })\n        .catch((err) => {\n          console.error('Unable to call VM query', err);\n        });\n    });\n\n    if (voteClaim) {\n      await new Promise((resolve) => setTimeout(resolve, 50));  \n\n      React.useEffect(() => {\n        const query = new Query({\n          address: new Address(contractAddressHex),\n          func: new ContractFunction('didUserPing'),\n          args: [new AddressValue(new Address(address))]\n        });\n        const proxy = new ProxyProvider(network.apiAddress);\n        proxy\n          .queryContract(query)\n          .then(({ returnData }) => {\n            const [encoded] = returnData;\n            switch (encoded) {\n              default: {\n                const decoded = Buffer.from(encoded, 'base64').toString('hex');\n                setVotedTory(Boolean(decoded));\n                break;\n              }\n            }\n          })\n          .catch((err) => {\n            console.error('Unable to call VM query', err);\n          });\n      });\n    }\n    if (hasVotedTory){ \n      await new Promise((resolve) => setTimeout(resolve, 50));  \n\n      React.useEffect(() => {\n        const query = new Query({\n          address: new Address(contractAddressHex),\n          func: new ContractFunction('didUserPing'),\n          args: [new AddressValue(new Address(address))]\n        });\n        const proxy = new ProxyProvider(network.apiAddress);\n        proxy\n          .queryContract(query)\n          .then(({ returnData }) => {\n            const [encoded] = returnData;\n            switch (encoded) {\n              default: {\n                const decoded = Buffer.from(encoded, 'base64').toString('hex');\n                setVotedLabour(Boolean(decoded));\n                break;\n              }\n            }\n          })\n          .catch((err) => {\n            console.error('Unable to call VM query', err);\n          });\n      });\n    }\n  };\n\n  checkVoteStatus();\n\n  return (\n    <div className='container pt-5 mt-5'>\n      <div className='col-10 col-md-10 col-lg-12 mx-auto'>\n        <div className='card d-flex justify-content-center shadow bg-light rounded border-1'>\n          {!voteClaim && (\n            <div className='card-header bg-light'>\n              <div className='text-light'>\n                <RegisterInfo />\n              </div>\n            </div>\n          )}\n          {voteClaim && (\n            <>\n              <div className='card-header bg-light'>\n                <div className='text-light'>\n                  <ClaimedToken />\n                </div>\n              </div>\n              <div className='card-body d-felx flex-column p-4'>\n                <StatutsVote />\n                <div className='pt-1'></div>\n              </div>\n            </>\n          )}\n          {(voteClaim && hasVotedTory) ||\n            (hasVotedLabour && (\n              <div className=''>\n                <Link\n                  to={routeNames.votedSuccessful}\n                  className='btn-success p-2 px-3 mx-3 my-2 rounded h2'\n                  onClick={handleLogout}\n                >\n                  Close\n                </Link>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}