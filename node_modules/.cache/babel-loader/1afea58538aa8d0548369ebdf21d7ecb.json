{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DappUI, logout, useGetAccountInfo, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport { Address, AddressValue, ContractFunction, ProxyProvider, Query } from '@elrondnetwork/erdjs';\nimport { contractAddressHex, contractClaim } from 'config';\nimport ClaimedToken from 'pages/ClaimedToken';\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport { Link } from 'react-router-dom';\nimport { routeNames } from 'routes';\nimport { Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n  /*\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc';\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);  \n  \n  type ApiTokenAccount = {\n    address: string;\n    balance: string;\n  };\n  //API request//\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote();\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n   const getCandidateVote = async () => {\n    const res = await fetch(\n      `${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`\n    );\n    if (!res.ok) return null;\n    const body = (await res.json()) as ApiTokenAccount[];\n    return body || [];\n  };\n  searchToken();\n  */\n\n\n  const {\n    network\n  } = useGetNetworkConfig();\n  const [voteClaim, setVoteClaimed] = React.useState();\n  const [hasVotedTory, setVotedTory] = React.useState();\n  const [hasVotedLabour, setVotedLabour] = React.useState(); //view smart contract function\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractClaim),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy.queryContract(query).then(_ref => {\n      let {\n        returnData\n      } = _ref;\n      const [encoded] = returnData;\n\n      switch (encoded) {\n        default:\n          {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVoteClaimed(Boolean(decoded));\n            break;\n          }\n      }\n    }).catch(err => {\n      console.error('Unable to call VM query', err);\n    });\n  });\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy.queryContract(query).then(_ref2 => {\n      let {\n        returnData\n      } = _ref2;\n      const [encoded] = returnData;\n\n      switch (encoded) {\n        default:\n          {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVotedTory(Boolean(decoded));\n            break;\n          }\n      }\n    }).catch(err => {\n      console.error('Unable to call VM query', err);\n    });\n  });\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy.queryContract(query).then(_ref3 => {\n      let {\n        returnData\n      } = _ref3;\n      const [encoded] = returnData;\n\n      switch (encoded) {\n        default:\n          {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVotedLabour(Boolean(decoded));\n            break;\n          }\n      }\n    }).catch(err => {\n      console.error('Unable to call VM query', err);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pt-5 mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 col-md-10 col-lg-12 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card d-flex justify-content-center shadow bg-light rounded border-1\",\n        children: [!voteClaim && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header bg-light\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-light\",\n            children: /*#__PURE__*/_jsxDEV(RegisterInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), voteClaim && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-light\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-light\",\n              children: /*#__PURE__*/_jsxDEV(ClaimedToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body d-felx flex-column p-4\",\n            children: [/*#__PURE__*/_jsxDEV(StatutsVote, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pt-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), voteClaim && hasVotedTory && /*#__PURE__*/_jsxDEV(Modal, {\n          show: true,\n          className: \"p-5\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            className: \"badge badge-primary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n              children: \"Conservative Party Votes Ballot Box.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"h2 p-5 my-2 text-center\",\n            children: [\"Your vote has successfully been recorded.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card pt-5 mt-4 border-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card p-3 text-left shadow border-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"h4\",\n                  children: \"Your address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"data-testid\": \"accountAddress\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"text-primary h6\",\n                    href: `${network.explorerAddress}/address/${address}`,\n                    target: '_blank',\n                    rel: \"noopener noreferrer\",\n                    title: \"View in Explorer\",\n                    children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                      \"data-testid\": \"accountAddress\",\n                      text: address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: routeNames.votedSuccessful,\n              className: \"btn-success p-2 px-3 mx-3 my-2 rounded h2\",\n              onClick: handleLogout,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), voteClaim && hasVotedLabour && /*#__PURE__*/_jsxDEV(Modal, {\n          show: true,\n          className: \"p-5\",\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            className: \"badge badge-danger\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h3 p-2 mx-2 mt-2 mb-0 text-center\",\n              children: \"Labour Party Ballot Box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"h2 p-5 m-2 text-center\",\n            children: [\"Your vote has successfully been recorded.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card pt-5 mt-4 border-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card p-3 text-left shadow border-danger\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"h4\",\n                  children: \"Your address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"data-testid\": \"accountAddress\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"text-danger h6\",\n                    href: `${network.explorerAddress}/address/${address}`,\n                    target: '_blank',\n                    rel: \"noopener noreferrer\",\n                    title: \"View in Explorer\",\n                    children: /*#__PURE__*/_jsxDEV(DappUI.Trim, {\n                      \"data-testid\": \"accountAddress\",\n                      text: address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: routeNames.votedSuccessful,\n              className: \"btn-success p-2 px-3 mx-3 my-2 rounded h2\",\n              onClick: handleLogout,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"wsO30Tm5ntRbvHdcKqDpjM67sxQ=\", false, function () {\n  return [useGetAccountInfo, useGetNetworkConfig];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx"],"names":["React","DappUI","logout","useGetAccountInfo","useGetNetworkConfig","Address","AddressValue","ContractFunction","ProxyProvider","Query","contractAddressHex","contractClaim","ClaimedToken","RegisterInfo","StatutsVote","Link","routeNames","Modal","Dashboard","address","handleLogout","window","location","origin","votedSuccessful","network","voteClaim","setVoteClaimed","useState","hasVotedTory","setVotedTory","hasVotedLabour","setVotedLabour","useEffect","query","func","args","proxy","apiAddress","queryContract","then","returnData","encoded","decoded","Buffer","from","toString","Boolean","catch","err","console","error","explorerAddress","target"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  DappUI,\n  logout,\n  useGetAccountInfo,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport {\n  Address,\n  AddressValue,\n  ContractFunction,\n  ProxyProvider,\n  Query\n} from '@elrondnetwork/erdjs';\nimport { contractAddress, contractAddressHex, contractClaim } from 'config';\nimport ClaimedToken from 'pages/ClaimedToken';\nimport Transaction from 'pages/Transaction';\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport { Link } from 'react-router-dom';\nimport { routeNames } from 'routes';\nimport { Modal } from 'react-bootstrap';\n\nconst Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const handleLogout = () => {\n    logout(`${window.location.origin}${routeNames.votedSuccessful}`);\n  };\n\n  /*\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc';\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);  \n  \n  type ApiTokenAccount = {\n    address: string;\n    balance: string;\n  };\n  //API request//\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote();\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n\n  const getCandidateVote = async () => {\n    const res = await fetch(\n      `${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`\n    );\n    if (!res.ok) return null;\n    const body = (await res.json()) as ApiTokenAccount[];\n    return body || [];\n  };\n  searchToken();\n  */\n  const { network } = useGetNetworkConfig();\n  const [voteClaim, setVoteClaimed] = React.useState<boolean>();\n  const [hasVotedTory, setVotedTory] = React.useState<boolean>();\n  const [hasVotedLabour, setVotedLabour] = React.useState<boolean>();\n\n  //view smart contract function\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractClaim),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVoteClaimed(Boolean(decoded));\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n  });\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVotedTory(Boolean(decoded));\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n  });\n\n  React.useEffect(() => {\n    const query = new Query({\n      address: new Address(contractAddressHex),\n      func: new ContractFunction('didUserPing'),\n      args: [new AddressValue(new Address(address))]\n    });\n    const proxy = new ProxyProvider(network.apiAddress);\n    proxy\n      .queryContract(query)\n      .then(({ returnData }) => {\n        const [encoded] = returnData;\n        switch (encoded) {\n          default: {\n            const decoded = Buffer.from(encoded, 'base64').toString('hex');\n            setVotedLabour(Boolean(decoded));\n            break;\n          }\n        }\n      })\n      .catch((err) => {\n        console.error('Unable to call VM query', err);\n      });\n  });\n\n  return (\n    <div className='container pt-5 mt-5'>\n      <div className='col-10 col-md-10 col-lg-12 mx-auto'>\n        <div className='card d-flex justify-content-center shadow bg-light rounded border-1'>\n          {!voteClaim && (\n            <div className='card-header bg-light'>\n              <div className='text-light'>\n                <RegisterInfo />\n              </div>\n            </div>\n          )}\n          {voteClaim && (\n            <>\n              <div className='card-header bg-light'>\n                <div className='text-light'>\n                  <ClaimedToken />\n                </div>\n              </div>\n              <div className='card-body d-felx flex-column p-4'>\n                <StatutsVote />\n                <div className='pt-1'></div>\n              </div>\n            </>\n          )}\n          {voteClaim && hasVotedTory && (\n            <Modal show={true} className='p-5'>\n              <Modal.Header className='badge badge-primary'>\n                <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                  Conservative Party Votes Ballot Box.\n                </div>\n              </Modal.Header>\n              <Modal.Body className='h2 p-5 my-2 text-center'>\n                Your vote has successfully been recorded.\n                <div className='card pt-5 mt-4 border-0'>\n                  <div className='card p-3 text-left shadow border-primary'>\n                    <span className='h4'>Your address:</span>\n                    <span data-testid='accountAddress'>\n                      <a\n                        className='text-primary h6'\n                        href={`${network.explorerAddress}/address/${address}`}\n                        {...{\n                          target: '_blank'\n                        }}\n                        rel='noopener noreferrer'\n                        title='View in Explorer'\n                      >\n                        <DappUI.Trim\n                          data-testid='accountAddress'\n                          text={address}\n                        />\n                      </a>\n                    </span>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n               <Link\n                 to={routeNames.votedSuccessful}\n                 className='btn-success p-2 px-3 mx-3 my-2 rounded h2'\n                 onClick={handleLogout}\n               >\n                 Close\n               </Link>\n              </Modal.Footer>\n            </Modal>\n          )}\n          {voteClaim && hasVotedLabour && (\n            <Modal show={true} className='p-5'>\n              <Modal.Header className='badge badge-danger'>\n                <div className='h3 p-2 mx-2 mt-2 mb-0 text-center'>\n                  Labour Party Ballot Box\n                </div>\n              </Modal.Header>\n              <Modal.Body className='h2 p-5 m-2 text-center'>\n                Your vote has successfully been recorded.\n                <div className='card pt-5 mt-4 border-0'>\n                  <div className='card p-3 text-left shadow border-danger'>\n                    <span className='h4'>Your address:</span>\n                    <span data-testid='accountAddress'>\n                      <a\n                        className='text-danger h6'\n                        href={`${network.explorerAddress}/address/${address}`}\n                        {...{\n                          target: '_blank'\n                        }}\n                        rel='noopener noreferrer'\n                        title='View in Explorer'\n                      >\n                        <DappUI.Trim\n                          data-testid='accountAddress'\n                          text={address}\n                        />\n                      </a>\n                    </span>\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Link\n                  to={routeNames.votedSuccessful}\n                  className='btn-success p-2 px-3 mx-3 my-2 rounded h2'\n                  onClick={handleLogout}\n                >\n                  Close\n                </Link>\n              </Modal.Footer>\n            </Modal>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}