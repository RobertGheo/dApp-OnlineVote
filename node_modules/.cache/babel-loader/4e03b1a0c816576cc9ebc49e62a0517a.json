{"ast":null,"code":"import Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Transaction from './pages/Transaction';\nimport UnlockRoute from './pages/UnlockPage';\nexport const routeNames = [{\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlockP: '/unlockPage',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect'\n}, {\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.unlockP,\n  title: 'Unlock',\n  component: UnlockRoute\n}, {\n  path: routeNames.dashboard,\n  title: 'Dashboard',\n  component: Dashboard,\n  authenticatedRoute: true\n}, {\n  path: routeNames.transaction,\n  title: 'Transaction',\n  component: Transaction\n}];\n/**\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} • ${dAppName}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n*/","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/routes.ts"],"names":["Dashboard","Home","Transaction","UnlockRoute","routeNames","home","dashboard","transaction","unlockP","ledger","walletconnect","path","title","component","authenticatedRoute"],"mappings":"AAEA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAE;AAC1BC,EAAAA,IAAI,EAAE,GADoB;AAE1BC,EAAAA,SAAS,EAAE,YAFe;AAG1BC,EAAAA,WAAW,EAAE,cAHa;AAI1BC,EAAAA,OAAO,EAAE,aAJiB;AAK1BC,EAAAA,MAAM,EAAE,SALkB;AAM1BC,EAAAA,aAAa,EAAE;AANW,CAAF,EAQxB;AACEC,EAAAA,IAAI,EAAEP,UAAU,CAACC,IADnB;AAEEO,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEZ;AAHb,CARwB,EAaxB;AACEU,EAAAA,IAAI,EAAEP,UAAU,CAACI,OADnB;AAEEI,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,SAAS,EAAEV;AAHb,CAbwB,EAkBxB;AACEQ,EAAAA,IAAI,EAAEP,UAAU,CAACE,SADnB;AAEEM,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,SAAS,EAAEb,SAHb;AAIEc,EAAAA,kBAAkB,EAAE;AAJtB,CAlBwB,EAwBxB;AACEH,EAAAA,IAAI,EAAEP,UAAU,CAACG,WADnB;AAEEK,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,SAAS,EAAEX;AAHb,CAxBwB,CAAnB;AA8BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Transaction from './pages/Transaction';\nimport UnlockRoute from './pages/UnlockPage';\n\nexport const routeNames = [ {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlockP: '/unlockPage',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect'\n},\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.unlockP,\n    title: 'Unlock',\n    component: UnlockRoute\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.transaction,\n    title: 'Transaction',\n    component: Transaction\n  }\n];\n/**\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} • ${dAppName}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n*/\n"]},"metadata":{},"sourceType":"module"}