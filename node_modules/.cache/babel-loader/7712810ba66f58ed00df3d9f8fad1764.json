{"ast":null,"code":"var _jsxFileName = \"/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport ClaimedToken from 'pages/ClaimedToken'; //import Actions from './Actions';\n\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport TopInfo from './TopInfo';\nimport Transaction from 'pages/Transaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc'; //const TokenMinAmount = 1;\n\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);\n  const {\n    address\n  } = useGetAccountInfo();\n\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote(); //const accountBalance = new BigNumber(candidateVote.balance);\n\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n\n  const getCandidateVote = async () => {\n    const res = await fetch(`${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`);\n    if (!res.ok) return null;\n    const body = await res.json();\n    return body || [];\n  };\n\n  searchToken();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pt-5 mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 col-md-10 col-lg-12 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card d-flex justify-content-center shadow bg-light rounded border-1\",\n        children: [!stateTokenVote && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header bg-light\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-light\",\n            children: [/*#__PURE__*/_jsxDEV(RegisterInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Transaction, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), stateTokenVote && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-light\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-light\",\n              children: /*#__PURE__*/_jsxDEV(ClaimedToken, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body d-felx flex-column p-4\",\n            children: [/*#__PURE__*/_jsxDEV(StatutsVote, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(TopInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"Sgh9UNt6tXSn6iIKaAbqn8excnM=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/robert/Final Project/dApp-OnlineVote/src/pages/Dashboard/index.tsx"],"names":["React","useGetAccountInfo","ClaimedToken","RegisterInfo","StatutsVote","TopInfo","Transaction","Dashboard","TokenIdentifier","ApiUrl","stateTokenVote","setStateTokenVote","useState","Boolean","address","searchToken","candidateVote","getCandidateVote","res","fetch","ok","body","json"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,YAAP,MAAyB,oBAAzB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,eAAe,GAAG,mBAAxB,CADsB,CAEtB;;AACA,QAAMC,MAAM,GAAG,+BAAf;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,KAAK,CAACY,QAAN,CAAeC,OAAf,CAA5C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcb,iBAAiB,EAArC;;AAOA,QAAMc,WAAW,GAAG,YAAY;AAC9B,UAAMC,aAAa,GAAG,MAAMC,gBAAgB,EAA5C,CAD8B,CAE9B;;AAEA,QAAI,CAACD,aAAL,EAAoB;AAClBL,MAAAA,iBAAiB,CAAC,KAAD,CAAjB,CADkB,CACQ;AAC3B,KAFD,MAEO;AACLA,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,GATD;;AAWA,QAAMM,gBAAgB,GAAG,YAAY;AACnC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,GAAEV,MAAO,aAAYK,OAAQ,WAAUN,eAAgB,EADnC,CAAvB;AAGA,QAAI,CAACU,GAAG,CAACE,EAAT,EAAa,OAAO,IAAP;AACb,UAAMC,IAAI,GAAI,MAAMH,GAAG,CAACI,IAAJ,EAApB;AACA,WAAOD,IAAI,IAAI,EAAf;AACD,GAPD;;AASAN,EAAAA,WAAW;AAEX,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qEAAf;AAAA,mBACG,CAACL,cAAD,iBACC;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,EASGA,cAAc,iBACb;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAA,oCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,wBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjED;;GAAMH,S;UAKgBN,iB;;;KALhBM,S;AAmEN,eAAeA,SAAf","sourcesContent":["import * as React from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport ClaimedToken from 'pages/ClaimedToken';\n//import Actions from './Actions';\nimport RegisterInfo from '../RegisterID';\nimport StatutsVote from './CheckVote';\nimport TopInfo from './TopInfo';\nimport Transactions from './Transactions';\nimport Transaction from 'pages/Transaction';\n\nconst Dashboard = () => {\n  const TokenIdentifier = 'VOTEUK2024-ecc0dc';\n  //const TokenMinAmount = 1;\n  const ApiUrl = 'https://devnet-api.elrond.com';\n  const [stateTokenVote, setStateTokenVote] = React.useState(Boolean);\n  const { address } = useGetAccountInfo();\n\n  type ApiTokenAccount = {\n    address: string;\n    balance: string;\n  };\n\n  const searchToken = async () => {\n    const candidateVote = await getCandidateVote();\n    //const accountBalance = new BigNumber(candidateVote.balance);\n\n    if (!candidateVote) {\n      setStateTokenVote(false); //address does not have token vote\n    } else {\n      setStateTokenVote(true);\n    }\n  };\n\n  const getCandidateVote = async () => {\n    const res = await fetch(\n      `${ApiUrl}/accounts/${address}/tokens/${TokenIdentifier}`\n    );\n    if (!res.ok) return null;\n    const body = (await res.json()) as ApiTokenAccount[];\n    return body || [];\n  };\n\n  searchToken();\n\n  return (\n    <div className='container pt-5 mt-5'>\n      <div className='col-10 col-md-10 col-lg-12 mx-auto'>\n        <div className='card d-flex justify-content-center shadow bg-light rounded border-1'>\n          {!stateTokenVote && (\n            <div className='card-header bg-light'>\n              <div className='text-light'>\n                <RegisterInfo />\n                <Transaction />\n              </div>\n            </div>\n          )}\n          {stateTokenVote && (\n            <>\n              <div className='card-header bg-light'>\n                <div className='text-light'>\n                  <ClaimedToken />\n                </div>\n              </div>\n              <div className='card-body d-felx flex-column p-4'>\n                <StatutsVote />\n                <div className='card'>\n                  <TopInfo />\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}