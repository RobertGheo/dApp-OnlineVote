/**
 * Anim callback function.
 * @param ntime normalized time (0 to 1). Value might be eased if a ease function was provided.
 * @param raftime the requestAnimationFrame time (relative to raf first start time)
 * @returns if callback returns false, it will end the callbacks regardless of the remaining time.
 */
export declare type AnimCallback = (ntime: number, raftime: number) => void | boolean;
/**
 * Execute the callback on each requestAnimationFrame with the normalized time as argument [0..1] based on the duration
 * and eventual easing.
 *
 * Note 1: This use the requestAnimationFrame timestamp, to allow animations synchronization.
 *
 * Note 2: dom-native does not provide any easing method. d3-ease are a good source of easings.
 *
 * @param callback function to be callback on each animation frame with the normalized time.
 * @param duration Duration of the animation. Will be used at the time basis for the normalization.
 * @param ease Optional ease function (take the linear normalized time)
 *
 * @returns Promise<void>, which resolve with the raftime of the last frame.
 */
export declare function anim(callback: AnimCallback, duration: number, ease?: (linearTime: number) => number): Promise<void>;
