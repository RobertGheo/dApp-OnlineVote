import { OnListenerBySelector } from './event.js';
import { HubBindings } from './hub.js';
/**
 * BaseHTMLElement that all custom elements from this application should inherit from.
 *
 * SubClass Usage:
 *   - `init()` to create/modify the innerHTML/children, bind events. Must call `super.init()`
 *   - `this.uid` is the unique id for this component instance, so, can use to bind parent element events for later cleanup.
 *   - `disconnectedCallback()` to unbind any events bound to the parent of the component (document event binding). Must call `super.disconnectedCallback()`
 *
 * Important:
 *   - SubClass should/must override `init()` but never call `init()` from anywhere. Only `BaseHTMLElement.connectedCallback()` implementation should call `init()`
 *   - All calls to custom element interface `disconnectedCallback()` `connectedCallback()` `attributeChangedCallback()` MUST call their `super...` method.
 *
 */
export declare abstract class BaseHTMLElement extends HTMLElement {
    readonly uid: string;
    protected readonly _nsObj: {
        ns: string;
    };
    events?: OnListenerBySelector;
    docEvents?: OnListenerBySelector;
    winEvents?: OnListenerBySelector;
    hubEvents?: HubBindings;
    /** called in the first requestAnimationFrame (i.e., before the very first paint) */
    preDisplay?(): void;
    /** called in the after the first paint (i.e., requestAnimationFrame(requestAnimationFrame(..))) */
    postDisplay?(): void;
    private _init;
    private _has_parent_events;
    private _parent_bindings_done;
    private _parent_unbindings_planned;
    private _hub_bindings_done;
    private _preDisplay_attached;
    private _postDisplay_attached;
    protected get initialized(): boolean;
    constructor();
    /**
     * Method to override to create child elements. Will be called only once by the BaseHTMLElement `connectedCallback()` implementation.
     *
     * - Best Pratice: call `super.init()` when overriden.
     * - DO NOT call this method, this is called by BaseHTMLElement internal.
     *
     */
    init(): void;
    /**
     * Base implementation of `connectedCallback` that will call `this.init()` once.
     *
     * - MUST call `super.connectedCallback()` when overriden.
     */
    connectedCallback(): void;
    /**
     * Empty implementation to allow `super.disconnectedCallback()` best practices on sub classes
     */
    disconnectedCallback(): void;
}
export declare function addDOMEvents(target: OnListenerBySelector | undefined, source: OnListenerBySelector): OnListenerBySelector;
export declare function addHubEvents(target: HubBindings | undefined, source: HubBindings): (import("./hub.js").HubListenerByFullSelector | import("./hub.js").HubListenerByHubNameBySelector)[];
