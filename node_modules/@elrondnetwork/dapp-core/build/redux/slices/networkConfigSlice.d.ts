import { IDappProvider, IProvider, IApiProvider } from '@elrondnetwork/erdjs';
import { PayloadAction } from '@reduxjs/toolkit';
import { AccountInfoSliceNetworkType, NetworkType } from 'types';
export declare const defaultNetwork: AccountInfoSliceNetworkType;
export interface NetworkConfigStateType {
    provider: IDappProvider;
    proxy: IProvider;
    apiProvider: IApiProvider;
    network: AccountInfoSliceNetworkType;
    chainID: string;
}
export declare const networkConfigSlice: import("@reduxjs/toolkit").Slice<NetworkConfigStateType, {
    initializeNetworkConfig: (state: NetworkConfigStateType, action: PayloadAction<NetworkType>) => void;
    setChainID: (state: NetworkConfigStateType, action: PayloadAction<string>) => void;
    setProvider: (state: NetworkConfigStateType, action: PayloadAction<IDappProvider>) => void;
}, "appConfig">;
export declare const initializeNetworkConfig: import("@reduxjs/toolkit").ActionCreatorWithPayload<NetworkType, string>, setChainID: import("@reduxjs/toolkit").ActionCreatorWithPayload<string, string>, setProvider: import("@reduxjs/toolkit").ActionCreatorWithPayload<IDappProvider, string>;
declare const _default: import("redux").Reducer<NetworkConfigStateType, import("redux").AnyAction>;
export default _default;
